summary(lmemort2)$tTable[,5]
d$Treatment <- relevel(d$Treatment, ref = "VC")
lmemort3 = lme(Day3Mortality ~ Treatment, data=d, random = ~1|Experiment)
pval3 = summary(lmemort3)$tTable[,5][3:4]
rm(list=ls())
d <- read_csv("day3Mortality.csv")
d = as.data.frame(d)
attr(d, "spec") <- NULL
# Note: There are 14 NC; 15 VR, VC, NR
d = d[which(d$Treatment %in% c("None Chestnut", "None Rockrose", "Virus Chestnut", "Virus Rockrose")),]
d$Treatment
d$Treatment = as.factor(d$Treatment)
colnames(d)[3] = "Day3Mortality"
levels(d$Treatment) <- c('NC', 'NR', 'VC', 'VR')
d$Virus = sapply(d$Treatment, function(x) substr(x, 1, 1))
d$Diet = sapply(d$Treatment, function(x) substr(x, 2, 2))
d$Virus = as.factor(d$Virus)
d$Diet = as.factor(d$Diet)
mortcomp <- lme(Day3Mortality ~ Diet*Virus, data = d, random = ~1|Experiment)
p.adjust(anova(mortcomp)[["p-value"]][2:3], "BH")
d$Treatment <- relevel(d$Treatment, ref = "NC")
lmemort1 = lme(Day3Mortality ~ Treatment, data=d, random = ~1|Experiment)
pval1 = summary(lmemort1)$tTable[,5][2:4]
d$Treatment <- relevel(d$Treatment, ref = "NR")
lmemort2 = lme(Day3Mortality ~ Treatment, data=d, random = ~1|Experiment)
pval2 = summary(lmemort2)$tTable[,5][3:4]
d$Treatment <- relevel(d$Treatment, ref = "VC")
lmemort3 = lme(Day3Mortality ~ Treatment, data=d, random = ~1|Experiment)
pval3 = summary(lmemort3)$tTable[,5][4]
pval1
pval2
pval3
mortpval = c(pval1, pval2, pval3)
mortpval
p.adjust(mortpval, "BH")
p.adjust(anova(mortcomp)[["p-value"]][2:3], "BH")
mortcomp <- lme(Day3Mortality ~ Diet*Virus, data = d, random = ~1|Experiment)
summary(mortcomp)$tTable
p.adjust(anova(mortcomp)[["p-value"]][2:3], "BH")
anova(mortcomp)
p.adjust(anova(mortcomp)[["p-value"]][2:4], "BH")
anova(mortcomp)
anova(mortcomp2)
anova(mortcomp)
anova(mortcomp)[["p-value"]]
lmeMortMain <- lme(Day3Mortality ~ Diet*Virus, data = d, random = ~1|Experiment)
anova(lmeMortMain)[["p-value"]]
# Treatment
lmeMortTreatment <- lme(Day3Mortality ~ Treatment, data = d, random = ~1|Experiment)
anova(lmeMortTreatment)[["p-value"]]
# Pairwise (with BH correction)
d$Treatment <- relevel(d$Treatment, ref = "NC")
lmemort1 = lme(Day3Mortality ~ Treatment, data=d, random = ~1|Experiment)
pval1 = summary(lmemort1)$tTable[,5][2:4]
d$Treatment <- relevel(d$Treatment, ref = "NR")
lmemort2 = lme(Day3Mortality ~ Treatment, data=d, random = ~1|Experiment)
pval2 = summary(lmemort2)$tTable[,5][3:4]
d$Treatment <- relevel(d$Treatment, ref = "VC")
lmemort3 = lme(Day3Mortality ~ Treatment, data=d, random = ~1|Experiment)
pval3 = summary(lmemort3)$tTable[,5][4]
mortpval = c(pval1, pval2, pval3)
p.adjust(mortpval, "BH")
d <- read_delim("logIAPV.csv", "\t", escape_double = FALSE, trim_ws = TRUE)
d = as.data.frame(d)
attr(d, "spec") <- NULL
d = d[which(d$treatment %in% c("None Chestnut", "None Rockrose", "Virus Chestnut", "Virus Rockrose")),]
d$treatment = as.factor(d$treatment)
colnames(d)[3] = "logIAPV"
levels(d$treatment) <- c('NC', 'NR', 'VC', 'VR')
colnames(d)[1] <- "Treatment"
d$Virus = sapply(d$Treatment, function(x) substr(x, 1, 1))
d$Diet = sapply(d$Treatment, function(x) substr(x, 2, 2))
d$Virus = as.factor(d$Virus)
d$Diet = as.factor(d$Diet)
str(d)
rm(list=ls())
d <- read_delim("logIAPV.csv", "\t", escape_double = FALSE, trim_ws = TRUE)
d = as.data.frame(d)
attr(d, "spec") <- NULL
d = d[which(d$treatment %in% c("None Chestnut", "None Rockrose", "Virus Chestnut", "Virus Rockrose")),]
d$treatment = as.factor(d$treatment)
colnames(d)[3] = "logIAPV"
levels(d$treatment) <- c('NC', 'NR', 'VC', 'VR')
colnames(d)[1] <- "Treatment"
d$Virus = sapply(d$Treatment, function(x) substr(x, 1, 1))
d$Diet = sapply(d$Treatment, function(x) substr(x, 2, 2))
d$Virus = as.factor(d$Virus)
d$Diet = as.factor(d$Diet)
# Main effects and interactive terms
lmeMortMain <- lme(logIAPV ~ Diet*Virus, data = d, random = ~1|Experiment)
anova(lmeMortMain)[["p-value"]]
# Treatment
lmeMortTreatment <- lme(logIAPV ~ Treatment, data = d, random = ~1|Experiment)
anova(lmeMortTreatment)[["p-value"]]
# Pairwise (with BH correction)
d$Treatment <- relevel(d$Treatment, ref = "NC")
lmemort1 = lme(logIAPV ~ Treatment, data=d, random = ~1|Experiment)
pval1 = summary(lmemort1)$tTable[,5][2:4]
d$Treatment <- relevel(d$Treatment, ref = "NR")
lmemort2 = lme(logIAPV ~ Treatment, data=d, random = ~1|Experiment)
pval2 = summary(lmemort2)$tTable[,5][3:4]
d$Treatment <- relevel(d$Treatment, ref = "VC")
lmemort3 = lme(logIAPV ~ Treatment, data=d, random = ~1|Experiment)
pval3 = summary(lmemort3)$tTable[,5][4]
mortpval = c(pval1, pval2, pval3)
p.adjust(mortpval, "BH")
setwd("~/Desktop/GeneLab/AMR/GLDS-66")
library(readxl)
amrPanel <- read_excel("AMR_panel.xlsx")
amrPanel <- as.data.frame(amrPanel) #1354, not 1358
amrPanel <- amrPanel[,c(1,6)]
length(unique(amrPanel$contig)) #485, not 518
matches <- read.delim("~/Desktop/GeneLab/AMR/GLDS-66/TestDiamond/matches.m8", header=FALSE)
length(unique(matches$V1)) # 452
length(which(amrPanel$contig %in% matches$V1)) #1288 (out of 1354)
contigCount <- as.data.frame(table(amrPanel$contig))
colnames(contigCount) <- c("contig","count")
contigCount <- contigCount[order(contigCount$count),]
table(contigCount$count) #349 are repeated twice, not 404; #136 are repeated any number of times other than twice, not 114
ampLengths <- lapply(amrPanel$amplicon, function(x) nchar(x))
ampLengths
table(ampLengths)
knitr::opts_chunk$set(echo = TRUE)
# Paper says should target 518 known resistance determinants, but file only has 485
nrow(amrPanel)
contigCount <- as.data.frame(table(amrPanel$contig))
contigCount
colnames(contigCount) <- c("contig","count")
contigCount <- contigCount[order(contigCount$count),]
table(contigCount$count)
4+4+51+46+23+4+2+2
ampLengths <- lapply(amrPanel$amplicon, function(x) nchar(x))
table(ampLengths)
ampLengths
str(ampLengths)
unlist(lapply(amrPanel$amplicon, function(x) nchar(x)))
ampLengths <- unlist(lapply(amrPanel$amplicon, function(x) nchar(x)))
table(ampLengths)
ggplot(ampLengths)
ggplot2(ampLengths)
library(ggplot2)
ggplot(ampLengths)
str(ampLengths)
qplot(ampLengths, geom="histogram")
min(ampLengths)
max(ampLengths)
dev.off()
dev.off()
setwd("~/HoneyBeePaper/N_V/DESeq2")
rm(list=ls())
library(DESeq2)
library(DESeq2)
library(RColorBrewer)
library(data.table)
library(ggplot2)
library(gplots)
library(GGally)
thisPath <- getwd()
data <- readRDS("../data/data.Rds")
data <- as.matrix(data)
coldata = data.frame(row.names = colnames(data), treatment = unlist(lapply(colnames(data), function (x) unlist(strsplit(x, "[.]"))[1])))
dds = DESeqDataSetFromMatrix(countData = data, colData = coldata, design = ~ treatment)
dds <- DESeq(dds)
uTreat <- unique(unlist(lapply(colnames(data), function (x) unlist(strsplit(x, "[.]"))[1])))
allPairs = data.frame(Treatment1 = factor(), Treatment2 = factor(), NumberDEG = numeric())
dataMetrics <- list()
for (i in 1:(length(uTreat)-1)){
for (j in (i+1):length(uTreat)){
res <- results(dds, contrast=c("treatment",uTreat[i],uTreat[j]))
hist(res$pvalue, breaks=20, col="grey", main=paste("pvalue for", uTreat[i], "and", uTreat[j]))
degLength <- length(which((res@listData)$padj <0.05))
metrics = as.data.frame(res@listData)
metrics = cbind(ID = res@rownames, metrics)
metrics$ID = as.character(metrics$ID)
dataMetrics[[paste0(uTreat[i], "_", uTreat[j])]] <- metrics
t1Length <- length(which(metrics[which(metrics$padj <0.05),]$log2FoldChange>0))
t2Length <- length(which(metrics[which(metrics$padj <0.05),]$log2FoldChange<0))
sigMetrics <- metrics[which(metrics$padj <0.05),]
RDN <- sigMetrics[which(sigMetrics$log2FoldChange>0),]$ID
RDV <- sigMetrics[which(sigMetrics$log2FoldChange<0),]$ID
RD_VIRUS_TOTAL <- metrics[which(metrics$padj <0.05),]$ID
saveRDS(RDV, file="RDV.Rds")
saveRDS(RDN, file="RDN.Rds")
saveRDS(RD_VIRUS_TOTAL, file="RD_VIRUS_TOTAL.Rds")
allPairs = rbind(allPairs, data.frame(Treatment1 = uTreat[i], Treatment2 = uTreat[j], NumberDEG = degLength, Treatment1Larger = t1Length, Treatment2Larger = t2Length))
}
}
allPairs
plotDispEsts(dds, ylim = c(1e-6, 1e1))
rld <- rlog(dds)
rld <- rlog(dds)
rldDF <- as.data.frame(assay(rld))
sampleDists <- dist(t(assay(rld)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- paste(rld$treatment, rld$patient, sep="-")
colnames(sampleDistMatrix) <- NULL
colours = colorRampPalette(rev(brewer.pal(9, "Blues")))(255)
print(plotPCA(rld, intgroup="treatment") + geom_label(aes(label = name), label.size=0.001))
print(plotPCA(rld, intgroup="treatment") + label.size=0.001))
print(plotPCA(rld, intgroup="treatment")))
print(plotPCA(rld, intgroup="treatment"))
rm(list=ls())
thisPath <- getwd()
data <- readRDS("../data/data.Rds")
data <- as.matrix(data)
coldata = data.frame(row.names = colnames(data), treatment = unlist(lapply(colnames(data), function (x) unlist(strsplit(x, "[.]"))[1])))
dds = DESeqDataSetFromMatrix(countData = data, colData = coldata, design = ~ treatment)
dds <- DESeq(dds)
uTreat <- unique(unlist(lapply(colnames(data), function (x) unlist(strsplit(x, "[.]"))[1])))
allPairs = data.frame(Treatment1 = factor(), Treatment2 = factor(), NumberDEG = numeric())
dataMetrics <- list()
for (i in 1:(length(uTreat)-1)){
for (j in (i+1):length(uTreat)){
res <- results(dds, contrast=c("treatment",uTreat[i],uTreat[j]))
hist(res$pvalue, breaks=20, col="grey", main=paste("pvalue for", uTreat[i], "and", uTreat[j]))
degLength <- length(which((res@listData)$padj <0.05))
metrics = as.data.frame(res@listData)
metrics = cbind(ID = res@rownames, metrics)
metrics$ID = as.character(metrics$ID)
dataMetrics[[paste0(uTreat[i], "_", uTreat[j])]] <- metrics
t1Length <- length(which(metrics[which(metrics$padj <0.05),]$log2FoldChange>0))
t2Length <- length(which(metrics[which(metrics$padj <0.05),]$log2FoldChange<0))
sigMetrics <- metrics[which(metrics$padj <0.05),]
GDC1 <- sigMetrics[which(sigMetrics$log2FoldChange>0),]$ID
GDV1 <- sigMetrics[which(sigMetrics$log2FoldChange<0),]$ID
GD_TOTAL1 <- metrics[which(metrics$padj <0.05),]$ID
GDV <- unname(sapply(GDV1, function(x) strsplit(strsplit(x, "[|]")[[1]][3], "[-]")[[1]][1]))
GDC <- unname(sapply(GDC1, function(x) strsplit(strsplit(x, "[|]")[[1]][3], "[-]")[[1]][1]))
GD_TOTAL <- unname(sapply(GD_TOTAL1, function(x) strsplit(strsplit(x, "[|]")[[1]][3], "[-]")[[1]][1]))
saveRDS(GDV, file="GDV.Rds")
saveRDS(GDC, file="GDC.Rds")
saveRDS(GD_TOTAL, file="GD_TOTAL.Rds")
allPairs = rbind(allPairs, data.frame(Treatment1 = uTreat[i], Treatment2 = uTreat[j], NumberDEG = degLength, Treatment1Larger = t1Length, Treatment2Larger = t2Length))
}
}
allPairs <- allPairs[order(allPairs$NumberDEG),]
allPairs
print(plotPCA(rld, intgroup="treatment") + geom_label(aes(label = name), label.size=0.001))
rld <- rlog(dds)
rld <- rlog(dds)
rldDF <- as.data.frame(assay(rld))
print(plotPCA(rld, intgroup="treatment") + geom_label(aes(label = name), label.size=0.001))
print(plotPCA(rld, intgroup="treatment"))
RM(LIST=LS())
rm(list=ls())
thisPath <- getwd()
data <- readRDS("../data/data.Rds")
data <- as.matrix(data)
coldata = data.frame(row.names = colnames(data), treatment = unlist(lapply(colnames(data), function (x) unlist(strsplit(x, "[.]"))[1])))
dds = DESeqDataSetFromMatrix(countData = data, colData = coldata, design = ~ treatment)
dds <- DESeq(dds)
uTreat <- unique(unlist(lapply(colnames(data), function (x) unlist(strsplit(x, "[.]"))[1])))
allPairs = data.frame(Treatment1 = factor(), Treatment2 = factor(), NumberDEG = numeric())
dataMetrics <- list()
for (i in 1:(length(uTreat)-1)){
for (j in (i+1):length(uTreat)){
res <- results(dds, contrast=c("treatment",uTreat[i],uTreat[j]))
hist(res$pvalue, breaks=20, col="grey", main=paste("pvalue for", uTreat[i], "and", uTreat[j]))
degLength <- length(which((res@listData)$padj <0.05))
metrics = as.data.frame(res@listData)
metrics = cbind(ID = res@rownames, metrics)
metrics$ID = as.character(metrics$ID)
dataMetrics[[paste0(uTreat[i], "_", uTreat[j])]] <- metrics
t1Length <- length(which(metrics[which(metrics$padj <0.05),]$log2FoldChange>0))
t2Length <- length(which(metrics[which(metrics$padj <0.05),]$log2FoldChange<0))
sigMetrics <- metrics[which(metrics$padj <0.05),]
RDN <- sigMetrics[which(sigMetrics$log2FoldChange>0),]$ID
RDV <- sigMetrics[which(sigMetrics$log2FoldChange<0),]$ID
RD_VIRUS_TOTAL <- metrics[which(metrics$padj <0.05),]$ID
saveRDS(RDV, file="RDV.Rds")
saveRDS(RDN, file="RDN.Rds")
saveRDS(RD_VIRUS_TOTAL, file="RD_VIRUS_TOTAL.Rds")
allPairs = rbind(allPairs, data.frame(Treatment1 = uTreat[i], Treatment2 = uTreat[j], NumberDEG = degLength, Treatment1Larger = t1Length, Treatment2Larger = t2Length))
}
}
allPairs <- allPairs[order(allPairs$NumberDEG),]
allPairs
rld <- rlog(dds)
rldDF <- as.data.frame(assay(rld))
print(plotPCA(rld, intgroup="treatment") + geom_label(aes(label = name), label.size=0.001))
print(plotPCA(rld, intgroup="treatment") + geom_label(aes(label = name), label.size=0.0001))
print(plotPCA(rld, intgroup="treatment") + geom_label(aes(label = name), label.size=0.00000001))
print(plotPCA(rld, intgroup="treatment") + geom_label(aes(label = name), label.size=0.000000000000000000001))
rm(list=ls())
data <- readRDS("../data/data.Rds")
data <- as.matrix(data)
View(data)
setwd("~/HoneyBeePaper/Overlaps")
rm(list=ls())
library(VennDiagram)
library(readr)
library(readxl)
#######################################################
# Read in DEG files
RDC <- readRDS("../C_R/DESeq2/RDC.Rds")
RDR <- readRDS("../C_R/DESeq2/RDR.Rds")
RDC
GB10896 %in% RDC
"GB10896" %in% RDC
"GB55489" %in% RDC
"GB10896" %in% RDR
RDV <- readRDS("../N_V/DESeq2/RDV.Rds")
RDN <- readRDS("../N_V/DESeq2/RDN.Rds")
"GB10896" %in% RDV
"GB10896" %in% RDN
NC_NR_NC <- readRDS("../NC_NR_VC_VR/DESeq2/Method1/NC_NR_NC.Rds") #601
NC_NR_NR <- readRDS("../NC_NR_VC_VR/DESeq2/Method1/NC_NR_NR.Rds") #340
VC_VR_VC <- readRDS("../NC_NR_VC_VR/DESeq2/Method1/VC_VR_VC.Rds") #247
VC_VR_VR <- readRDS("../NC_NR_VC_VR/DESeq2/Method1/VC_VR_VR.Rds") #129
"GB10896" %in% NC_NR_NC
"GB10896" %in% NC_NR_NR
"GB10896" %in% VC_VR_VC
"GB10896" %in% VC_VR_VR
data <- readRDS("../data/data.Rds")
head(data)
"GB10896" %in% rownames(dat)
"GB10896" %in% rownames(data)
rm(list=ls())
data <- readRDS("../data/data.Rds")
head(data)
galNames <- unname(sapply(rownames(data), function(x) strsplit(strsplit(x, "[|]")[[1]][3], "[-]")[[1]][1]))
"GB10896" %in% galNames
??lme
fm1 <- lme(distance ~ age, data = Orthodont)
library(nlme)
fm1 <- lme(distance ~ age, data = Orthodont)
str(Orthodont)
View(Orthodont)
??anova
??lme
rm(list=ls())
setwd("~/HoneyBeePaper/PathogenResponse")
library(plyr)
library(ggplot2)
library(multcompView)
library(readr)
library(multcomp)
library(nlme)
d <- read_csv("day3Mortality.csv")
d = as.data.frame(d)
attr(d, "spec") <- NULL
# Note: There are 14 NC; 15 VR, VC, NR
d = d[which(d$Treatment %in% c("None Chestnut", "None Rockrose", "Virus Chestnut", "Virus Rockrose")),]
d$Treatment
d$Treatment = as.factor(d$Treatment)
colnames(d)[3] = "Day3Mortality"
levels(d$Treatment) <- c('NC', 'NR', 'VC', 'VR')
d$Virus = sapply(d$Treatment, function(x) substr(x, 1, 1))
d$Diet = sapply(d$Treatment, function(x) substr(x, 2, 2))
d$Virus = as.factor(d$Virus)
d$Diet = as.factor(d$Diet)
# Main effects and interactive terms
lmeMortMain <- lme(Day3Mortality ~ Diet*Virus, data = d, random = ~1|Experiment)
anova(lmeMortMain)[["p-value"]]
anova(lmeMortMain)
# Pairwise (with BH correction)
d$Treatment <- relevel(d$Treatment, ref = "NC")
lmemort1 = lme(Day3Mortality ~ Treatment, data=d, random = ~1|Experiment)
pval1 = summary(lmemort1)$tTable[,5][2:4]
d$Treatment <- relevel(d$Treatment, ref = "NR")
lmemort2 = lme(Day3Mortality ~ Treatment, data=d, random = ~1|Experiment)
pval2 = summary(lmemort2)$tTable[,5][3:4]
d$Treatment <- relevel(d$Treatment, ref = "VC")
lmemort3 = lme(Day3Mortality ~ Treatment, data=d, random = ~1|Experiment)
pval3 = summary(lmemort3)$tTable[,5][4]
mortpval = c(pval1, pval2, pval3)
p.adjust(mortpval, "BH")
rm(list=ls())
dev.off()
d <- read_delim("logIAPV.csv", "\t", escape_double = FALSE, trim_ws = TRUE)
d = as.data.frame(d)
attr(d, "spec") <- NULL
d = d[which(d$treatment %in% c("None Chestnut", "None Rockrose", "Virus Chestnut", "Virus Rockrose")),]
d$treatment = as.factor(d$treatment)
colnames(d)[3] = "logIAPV"
levels(d$treatment) <- c('NC', 'NR', 'VC', 'VR')
colnames(d)[1] <- "Treatment"
d$Virus = sapply(d$Treatment, function(x) substr(x, 1, 1))
d$Diet = sapply(d$Treatment, function(x) substr(x, 2, 2))
d$Virus = as.factor(d$Virus)
d$Diet = as.factor(d$Diet)
# Main effects and interactive terms
lmeMortMain <- lme(logIAPV ~ Diet*Virus, data = d, random = ~1|Experiment)
anova(lmeMortMain)
View(d)
summary(d$Treatment)
anova(lmeMortMain)[["p-value"]]
# Treatment
lmeMortTreatment <- lme(logIAPV ~ Treatment, data = d, random = ~1|Experiment)
anova(lmeMortTreatment)
anova(lmeMortTreatment)[["p-value"]] # Obtain more precise p-values
# Pairwise (with BH correction)
d$Treatment <- relevel(d$Treatment, ref = "NC")
lmemort1 = lme(logIAPV ~ Treatment, data=d, random = ~1|Experiment)
pval1 = summary(lmemort1)$tTable[,5][2:4]
d$Treatment <- relevel(d$Treatment, ref = "NR")
lmemort2 = lme(logIAPV ~ Treatment, data=d, random = ~1|Experiment)
pval2 = summary(lmemort2)$tTable[,5][3:4]
d$Treatment <- relevel(d$Treatment, ref = "VC")
lmemort3 = lme(logIAPV ~ Treatment, data=d, random = ~1|Experiment)
pval3 = summary(lmemort3)$tTable[,5][4]
mortpval = c(pval1, pval2, pval3)
p.adjust(mortpval, "BH")
rm(list=ls())
d <- read_csv("day3Mortality.csv")
d = as.data.frame(d)
attr(d, "spec") <- NULL
# Note: There are 14 NC; 15 VR, VC, NR
d = d[which(d$Treatment %in% c("None Chestnut", "None Rockrose", "Virus Chestnut", "Virus Rockrose")),]
d$Treatment
d$Treatment = as.factor(d$Treatment)
colnames(d)[3] = "Day3Mortality"
levels(d$Treatment) <- c('NC', 'NR', 'VC', 'VR')
d$Virus = sapply(d$Treatment, function(x) substr(x, 1, 1))
d$Diet = sapply(d$Treatment, function(x) substr(x, 2, 2))
d$Virus = as.factor(d$Virus)
d$Diet = as.factor(d$Diet)
# Main effects and interactive terms
lmeMortMain <- lme(Day3Mortality ~ Diet*Virus, data = d, random = ~1|Experiment)
anova(lmeMortMain)
anova(lmeMortMain)[["p-value"]] # Obtain more precise p-values
# Treatment
lmeMortTreatment <- lme(Day3Mortality ~ Treatment, data = d, random = ~1|Experiment)
anova(lmeMortTreatment)
anova(lmeMortTreatment)[["p-value"]] # Obtain more precise p-values
summary(d$Treatment)
?lme
bookdown::render_book('index.Rmd', 'all')
install.packages("bookdown")
bookdown::render_book('index.Rmd', 'all')
getwd()
setwd("~/Desktop/Bookdown")
bookdown::render_book('index.Rmd', 'all')
bookdown::render_book('index.Rmd', 'all')
getwd()
setwd("~/Desktop/Bookdown")
library("bookdown")
bookdown::render_book('index.Rmd', 'all')
bookdown::render_book("index.Rmd","bookdown::gitbook")
setwd("~/Desktop/Pkgdown")
install.packages("pkgdown")
library(pkgdown)
devtools::install_github("r-lib/pkgdown")
setwd("~/bigPint")
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
install.packages("badgecreatr")
badgecreatr::badgeplacer( githubaccount = "yourgithubname",githubrepo = "yourpackagename", branch = "master")
badgecreatr::badgeplacer( githubaccount = "lrutter",githubrepo = "bigPint", branch = "master")
badgecreatr::badgeplacer( githubaccount = "lrutter",githubrepo = "bigPint", branch = "master")
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
badgecreatr::badgeplacer( githubaccount = "lrutter",githubrepo = "bigPint", branch = "master")
badgecreatr::badgeplacer( githubaccount = "lrutter",githubrepo = "bigPint", branch = "master")
pkgdown::build_site()
pkgdown::build_site()
getwd()
getwd()
setwd("~/HoneyBeePaper/NC_NR_VC_VR/data")
beeCounts <-read.delim(file="AllLaneCount.txt",row.names=1,stringsAsFactors = FALSE)
View(beeCounts)
View(beeCounts)
str(beeCounts)
beeCounts2 <- beeCounts
colnames(beeCounts2) <- c("NC.1", "NC.2", "NR.1", "VR.1", "NS.1", "VP.1", "NS.2", "VR.2", "NP.1", "VP.2", "VC.1", "NP.2", "VP.3", "NP.3", "VS.1", "VS.2", "VC.2", "NC.3", "VP.4", "NC.4", "NR.2", "VC.3", "VC.4", "NP.4", "VR.3", "NC.5", "VS.3", "NP.5", "VC.5", "VS.4", "NS.3", "VS.5", "VP.5", "NR.3", "NR.4", "VC.6", "NS.4", "NC.6", "NP.6", "VR.4", "NR.5", "NR.6", "NS.5", "VP.6", "NS.6", "VR.5", "VR.6", "VS.6")
colnames(beeCounts)
colnames(beeCounts)
colnames(beeCounts2)
colnames(beeCounts2)
colnames(beeCounts2)
library(readr)
AllLaneCount <- read_csv("AllLaneCount.txt")
View(AllLaneCount)
library(readr)
AllLaneCount <- read_delim("AllLaneCount.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(AllLaneCount)
str(AllLaneCount)
rm(list=ls())
dev.off()
getwd()
beeCounts <-read.delim(file="AllLaneCount.txt",row.names=1,stringsAsFactors = FALSE)
colnames(beeCounts) <- c("NC.1", "NC.2", "NR.1", "VR.1", "NS.1", "VP.1", "NS.2", "VR.2", "NP.1", "VP.2", "VC.1", "NP.2", "VP.3", "NP.3", "VS.1", "VS.2", "VC.2", "NC.3", "VP.4", "NC.4", "NR.2", "VC.3", "VC.4", "NP.4", "VR.3", "NC.5", "VS.3", "NP.5", "VC.5", "VS.4", "NS.3", "VS.5", "VP.5", "NR.3", "NR.4", "VC.6", "NS.4", "NC.6", "NP.6", "VR.4", "NR.5", "NR.6", "NS.5", "VP.6", "NS.6", "VR.5", "VR.6", "VS.6")
data <- beeCounts[ , order(names(beeCounts))]
str(data)
treatment = unlist(lapply(colnames(data), function (x) unlist(strsplit(x, "[.]"))[1]))
treatment
iTreatment = which(treatment %in% c("NC","NR","VC","VR"))
iTreatment
data = data[,iTreatment]
str(data)
write.table(data,"processedData.txt",sep="\t",row.names=FALSE)
getwd()
