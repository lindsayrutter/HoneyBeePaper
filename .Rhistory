Sting <- as.numeric(unlist(backBox[,grep("Sting", colnames(backBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(backBox[,grep("Brain", colnames(backBox), ignore.case=TRUE)]))
backBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
backBox <- melt(backBox2)
colnames(backBox) <- c("Tissue", "Count")
backBox$Count <- log(backBox$Count + 1)
backBox$Group <- "allData"
head(backBox)
png(paste0('All.jpg'))
print({
ggplot(backBox, aes(x = Tissue, y = Count)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90))
})
dev.off()
totalClusterBox = data.frame()
i=1
clusterVec = c("noninfected", "infected", "chestnut", "rockrose", "tolerance", "resistance")
cluster="noninfected"
geneCluster <- geneTable[which(geneTable$BeeBase %in% get(cluster)),]
colnames(geneCluster)[2] = "Entrez"
johnsonCluster <- as.data.frame(johnson[which(johnson$Entrez %in% geneCluster$Entrez),])
johnsonCluster[,2:ncol(johnsonCluster)] <- as.data.frame(sapply(johnsonCluster[,2:ncol(johnsonCluster)], as.numeric))
str(johnsonCluster)
# Boxplot foreground cluster
clusterBox <- johnsonCluster[,2:ncol(johnsonCluster)]
clusterBox <- clusterBox[,grep("Forager", colnames(clusterBox), ignore.case=TRUE)]
Antenna <- as.numeric(unlist(clusterBox[,grep("Antenna", colnames(clusterBox), ignore.case=TRUE)]))
Antenna
str(clusterBox)
rm(list=ls())
getwd()
noninfected <- readRDS("../N_V/DESeq2/RDN.Rds")
infected <- readRDS("../N_V/DESeq2/RDV.Rds")
chestnut <- readRDS("../C_R/DESeq2/RDC.Rds")
rockrose <- readRDS("../C_R/DESeq2/RDR.Rds")
tolerance <- readRDS("../ResistanceTolerance/tolerance.Rds")
resistance <- readRDS("../ResistanceTolerance/resistance.Rds")
data <- readRDS("../N_V/data/data.Rds")
rutterAll <- rownames(data)
geneTable <- read_csv("am.gene_info.csv", col_names=FALSE)
colnames(geneTable)[2] = "Entrez"
colnames(geneTable)[6] = "BeeBase"
geneTable <- geneTable[which(geneTable$BeeBase %in% grep("GB", geneTable$BeeBase, value=TRUE)),]
geneTable$BeeBase <- unlist(lapply(geneTable$BeeBase, function (x) unlist(strsplit(x, "[:]"))[2]))
# Only 8764 of the 15,314 Rutter BeeBase IDs are in the conversion table (convert between EntrezID and BeeBase)
geneTable <- geneTable[which(geneTable$BeeBase %in% rutterAll),]
johnson <- read_excel("Table_S1.xlsx")
colJohnson <- unlist(as.data.frame(johnson[2,]))
attributes(colJohnson) <- NULL
colnames(johnson) <- colJohnson
johnson <- johnson[3:nrow(johnson),]
colnames(johnson)[1] = "Entrez"
write.csv(johnson, "johnson.csv")
###########################################################
# Boxplot background Data
# Only 8739 Johnson Entrez is in geneTable Entrez
backBox <- johnson[which(johnson$Entrez %in% geneTable$Entrez),2:ncol(johnson)]
View(backBox)
# All 6 values for each tissue type for each gene
Antenna <- as.numeric(unlist(backBox[,grep("Antenna", colnames(backBox), ignore.case=TRUE)]))
Ganglia <- as.numeric(unlist(backBox[,grep("Ganglia", colnames(backBox), ignore.case=TRUE)]))
Hypopharyngeal <- as.numeric(unlist(backBox[,grep("Hypopharyngeal", colnames(backBox), ignore.case=TRUE)]))
Mandibular <- as.numeric(unlist(backBox[,grep("Mandibular", colnames(backBox), ignore.case=TRUE)]))
Midgut <- as.numeric(unlist(backBox[,grep("Midgut", colnames(backBox), ignore.case=TRUE)]))
Malpighian <- as.numeric(unlist(backBox[,grep("Malpighian", colnames(backBox), ignore.case=TRUE)]))
Muscle <- as.numeric(unlist(backBox[,grep("Muscle", colnames(backBox), ignore.case=TRUE)]))
Nasonov <- as.numeric(unlist(backBox[,grep("Nasonov", colnames(backBox), ignore.case=TRUE)]))
Sting <- as.numeric(unlist(backBox[,grep("Sting", colnames(backBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(backBox[,grep("Brain", colnames(backBox), ignore.case=TRUE)]))
backBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
str(backBox2)
8739*6
backBox <- melt(backBox2)
colnames(backBox) <- c("Tissue", "Count")
backBox$Count <- log(backBox$Count + 1)
backBox$Group <- "allData"
str(backBox)
png(paste0('All.jpg'))
print({
ggplot(backBox, aes(x = Tissue, y = Count)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90))
})
dev.off()
ggplot(backBox, aes(x = Tissue, y = Count)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90))
dev.off()
dev.off()
totalClusterBox = data.frame()
i=1
clusterVec = c("noninfected", "infected", "chestnut", "rockrose", "tolerance", "resistance")
clusterVec="noninfected"
geneCluster <- geneTable[which(geneTable$BeeBase %in% get(cluster)),]
cluster="infected"
str(cluster)
geneCluster <- geneTable[which(geneTable$BeeBase %in% get(cluster)),]
str(geneCluster)
cluster="chestnut"
geneCluster <- geneTable[which(geneTable$BeeBase %in% get(cluster)),]
str(geneCluster)
colnames(geneCluster)[2] = "Entrez"
johnsonCluster <- as.data.frame(johnson[which(johnson$Entrez %in% geneCluster$Entrez),])
johnsonCluster[,2:ncol(johnsonCluster)] <- as.data.frame(sapply(johnsonCluster[,2:ncol(johnsonCluster)], as.numeric))
View(johnsonCluter)
View(johnsonCluster)
cluster
# Boxplot foreground cluster
clusterBox <- johnsonCluster[,2:ncol(johnsonCluster)]
clusterBox <- clusterBox[,grep("Forager", colnames(clusterBox), ignore.case=TRUE)]
Antenna <- as.numeric(unlist(clusterBox[,grep("Antenna", colnames(clusterBox), ignore.case=TRUE)]))
Ganglia <- as.numeric(unlist(clusterBox[,grep("Ganglia", colnames(clusterBox), ignore.case=TRUE)]))
Hypopharyngeal <- as.numeric(unlist(clusterBox[,grep("Hypopharyngeal", colnames(clusterBox), ignore.case=TRUE)]))
Mandibular <- as.numeric(unlist(clusterBox[,grep("Mandibular", colnames(clusterBox), ignore.case=TRUE)]))
Midgut <- as.numeric(unlist(clusterBox[,grep("Midgut", colnames(clusterBox), ignore.case=TRUE)]))
Malpighian <- as.numeric(unlist(clusterBox[,grep("Malpighian", colnames(clusterBox), ignore.case=TRUE)]))
Muscle <- as.numeric(unlist(clusterBox[,grep("Muscle", colnames(clusterBox), ignore.case=TRUE)]))
Nasonov <- as.numeric(unlist(clusterBox[,grep("Nasonov", colnames(clusterBox), ignore.case=TRUE)]))
Sting <- as.numeric(unlist(clusterBox[,grep("Sting", colnames(clusterBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(clusterBox[,grep("Brain", colnames(clusterBox), ignore.case=TRUE)]))
clusterBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
clusterBox <- melt(clusterBox2)
colnames(clusterBox) <- c("Tissue", "Count")
clusterBox$Cluster <- c(clusterVec[i])
clusterBox$Count <- log(clusterBox$Count + 1)
totalClusterBox = rbind(totalClusterBox, clusterBox)
totalClusterBox = data.frame()
i=1
clusterVec = c("noninfected", "infected", "chestnut", "rockrose", "tolerance", "resistance")
for (cluster in clusterVec){
geneCluster <- geneTable[which(geneTable$BeeBase %in% get(cluster)),]
colnames(geneCluster)[2] = "Entrez"
johnsonCluster <- as.data.frame(johnson[which(johnson$Entrez %in% geneCluster$Entrez),])
johnsonCluster[,2:ncol(johnsonCluster)] <- as.data.frame(sapply(johnsonCluster[,2:ncol(johnsonCluster)], as.numeric))
# Boxplot foreground cluster
clusterBox <- johnsonCluster[,2:ncol(johnsonCluster)]
clusterBox <- clusterBox[,grep("Forager", colnames(clusterBox), ignore.case=TRUE)]
Antenna <- as.numeric(unlist(clusterBox[,grep("Antenna", colnames(clusterBox), ignore.case=TRUE)]))
Ganglia <- as.numeric(unlist(clusterBox[,grep("Ganglia", colnames(clusterBox), ignore.case=TRUE)]))
Hypopharyngeal <- as.numeric(unlist(clusterBox[,grep("Hypopharyngeal", colnames(clusterBox), ignore.case=TRUE)]))
Mandibular <- as.numeric(unlist(clusterBox[,grep("Mandibular", colnames(clusterBox), ignore.case=TRUE)]))
Midgut <- as.numeric(unlist(clusterBox[,grep("Midgut", colnames(clusterBox), ignore.case=TRUE)]))
Malpighian <- as.numeric(unlist(clusterBox[,grep("Malpighian", colnames(clusterBox), ignore.case=TRUE)]))
Muscle <- as.numeric(unlist(clusterBox[,grep("Muscle", colnames(clusterBox), ignore.case=TRUE)]))
Nasonov <- as.numeric(unlist(clusterBox[,grep("Nasonov", colnames(clusterBox), ignore.case=TRUE)]))
Sting <- as.numeric(unlist(clusterBox[,grep("Sting", colnames(clusterBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(clusterBox[,grep("Brain", colnames(clusterBox), ignore.case=TRUE)]))
clusterBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
clusterBox <- melt(clusterBox2)
colnames(clusterBox) <- c("Tissue", "Count")
clusterBox$Cluster <- c(clusterVec[i])
clusterBox$Count <- log(clusterBox$Count + 1)
totalClusterBox = rbind(totalClusterBox, clusterBox)
i=i+1
}
View(totalClusterBox)
str(totalClusterBox)
TissueVec <- c("Antenna", "Ganglia", "Hypopharyngeal", "Mandibular", "Midgut", "Malpighian", "Muscle", "Nasonov", "Sting", "Brain")
heatmapDat <- data.frame()
i=1
tissue="Antenna"
tissueBox = data.frame()
tissueBox = rbind(tissueBox, backBox[which(backBox$Tissue==tissue),])
tissueBox = rbind(tissueBox, totalClusterBox[which(totalClusterBox$Tissue==tissue),])
tissueBox = data.frame()
tissueBox = rbind(tissueBox, backBox[which(backBox$Tissue==tissue),])
tissueBox = rbind(tissueBox, totalClusterBox[which(totalClusterBox$Tissue==tissue),])
str(tissueBox)
tissueBox = data.frame()
tissueBox = rbind(tissueBox, backBox[which(backBox$Tissue==tissue),])
str(tissueBox)
tissueBox = rbind(tissueBox, totalClusterBox[which(totalClusterBox$Tissue==tissue),])
str(totalClusterBox[which(totalClusterBox$Tissue==tissue),])
rm(list=ls())
dev.off()
dev.off()
noninfected <- readRDS("../N_V/DESeq2/RDN.Rds")
infected <- readRDS("../N_V/DESeq2/RDV.Rds")
chestnut <- readRDS("../C_R/DESeq2/RDC.Rds")
rockrose <- readRDS("../C_R/DESeq2/RDR.Rds")
tolerance <- readRDS("../ResistanceTolerance/tolerance.Rds")
resistance <- readRDS("../ResistanceTolerance/resistance.Rds")
data <- readRDS("../N_V/data/data.Rds")
rutterAll <- rownames(data)
geneTable <- read_csv("am.gene_info.csv", col_names=FALSE)
colnames(geneTable)[2] = "Entrez"
colnames(geneTable)[6] = "BeeBase"
geneTable <- geneTable[which(geneTable$BeeBase %in% grep("GB", geneTable$BeeBase, value=TRUE)),]
geneTable$BeeBase <- unlist(lapply(geneTable$BeeBase, function (x) unlist(strsplit(x, "[:]"))[2]))
# Only 8764 of the 15,314 Rutter BeeBase IDs are in the conversion table (convert between EntrezID and BeeBase)
geneTable <- geneTable[which(geneTable$BeeBase %in% rutterAll),]
johnson <- read_excel("Table_S1.xlsx")
colJohnson <- unlist(as.data.frame(johnson[2,]))
attributes(colJohnson) <- NULL
colnames(johnson) <- colJohnson
johnson <- johnson[3:nrow(johnson),]
colnames(johnson)[1] = "Entrez"
write.csv(johnson, "johnson.csv")
###########################################################
# Boxplot background Data
# Only 8739 Johnson Entrez is in geneTable Entrez
backBox <- johnson[which(johnson$Entrez %in% geneTable$Entrez),2:ncol(johnson)]
# All 6 values for each tissue type for each gene
Antenna <- as.numeric(unlist(backBox[,grep("Antenna", colnames(backBox), ignore.case=TRUE)]))
Ganglia <- as.numeric(unlist(backBox[,grep("Ganglia", colnames(backBox), ignore.case=TRUE)]))
Hypopharyngeal <- as.numeric(unlist(backBox[,grep("Hypopharyngeal", colnames(backBox), ignore.case=TRUE)]))
Mandibular <- as.numeric(unlist(backBox[,grep("Mandibular", colnames(backBox), ignore.case=TRUE)]))
Midgut <- as.numeric(unlist(backBox[,grep("Midgut", colnames(backBox), ignore.case=TRUE)]))
Malpighian <- as.numeric(unlist(backBox[,grep("Malpighian", colnames(backBox), ignore.case=TRUE)]))
Muscle <- as.numeric(unlist(backBox[,grep("Muscle", colnames(backBox), ignore.case=TRUE)]))
Nasonov <- as.numeric(unlist(backBox[,grep("Nasonov", colnames(backBox), ignore.case=TRUE)]))
Sting <- as.numeric(unlist(backBox[,grep("Sting", colnames(backBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(backBox[,grep("Brain", colnames(backBox), ignore.case=TRUE)]))
backBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
backBox <- melt(backBox2)
colnames(backBox) <- c("Tissue", "Count")
backBox$Count <- log(backBox$Count + 1)
backBox$Group <- "allData"
png(paste0('All.jpg'))
print({
ggplot(backBox, aes(x = Tissue, y = Count)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90))
})
dev.off()
totalGroupBox = data.frame()
i=1
GroupVec = c("noninfected", "infected", "chestnut", "rockrose", "tolerance", "resistance")
for (Group in GroupVec){
geneGroup <- geneTable[which(geneTable$BeeBase %in% get(Group)),]
colnames(geneGroup)[2] = "Entrez"
johnsonGroup <- as.data.frame(johnson[which(johnson$Entrez %in% geneGroup$Entrez),])
johnsonGroup[,2:ncol(johnsonGroup)] <- as.data.frame(sapply(johnsonGroup[,2:ncol(johnsonGroup)], as.numeric))
# Boxplot foreground Group
GroupBox <- johnsonGroup[,2:ncol(johnsonGroup)]
GroupBox <- GroupBox[,grep("Forager", colnames(GroupBox), ignore.case=TRUE)]
Antenna <- as.numeric(unlist(GroupBox[,grep("Antenna", colnames(GroupBox), ignore.case=TRUE)]))
Ganglia <- as.numeric(unlist(GroupBox[,grep("Ganglia", colnames(GroupBox), ignore.case=TRUE)]))
Hypopharyngeal <- as.numeric(unlist(GroupBox[,grep("Hypopharyngeal", colnames(GroupBox), ignore.case=TRUE)]))
Mandibular <- as.numeric(unlist(GroupBox[,grep("Mandibular", colnames(GroupBox), ignore.case=TRUE)]))
Midgut <- as.numeric(unlist(GroupBox[,grep("Midgut", colnames(GroupBox), ignore.case=TRUE)]))
Malpighian <- as.numeric(unlist(GroupBox[,grep("Malpighian", colnames(GroupBox), ignore.case=TRUE)]))
Muscle <- as.numeric(unlist(GroupBox[,grep("Muscle", colnames(GroupBox), ignore.case=TRUE)]))
Nasonov <- as.numeric(unlist(GroupBox[,grep("Nasonov", colnames(GroupBox), ignore.case=TRUE)]))
Sting <- as.numeric(unlist(GroupBox[,grep("Sting", colnames(GroupBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(GroupBox[,grep("Brain", colnames(GroupBox), ignore.case=TRUE)]))
GroupBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
GroupBox <- melt(GroupBox2)
colnames(GroupBox) <- c("Tissue", "Count")
GroupBox$Group <- c(GroupVec[i])
GroupBox$Count <- log(GroupBox$Count + 1)
totalGroupBox = rbind(totalGroupBox, GroupBox)
i=i+1
}
TissueVec <- c("Antenna", "Ganglia", "Hypopharyngeal", "Mandibular", "Midgut", "Malpighian", "Muscle", "Nasonov", "Sting", "Brain")
heatmapDat <- data.frame()
i=1
tissue=TissueVec[1]
tissueBox = data.frame()
tissueBox = rbind(tissueBox, backBox[which(backBox$Tissue==tissue),])
tissueBox = rbind(tissueBox, totalGroupBox[which(totalGroupBox$Tissue==tissue),])
str(tissueBox)
tissueBox$Group = as.factor(tissueBox$Group)
head(tissueBox)
output
#kruskal.test(Count ~ Group, data = tissueBox)
output <- pairwise.wilcox.test(tissueBox$Count, tissueBox$Group, p.adjust.method = "BH")
output
output[[3]][1:6]
output[[3]]
??pairwise.wilcox.test
i
tissueBox = data.frame()
tissueBox = rbind(tissueBox, backBox[which(backBox$Tissue==tissue),])
tissueBox = rbind(tissueBox, totalGroupBox[which(totalGroupBox$Tissue==tissue),])
tissueBox$Group = as.factor(tissueBox$Group)
#kruskal.test(Count ~ Group, data = tissueBox)
output <- pairwise.wilcox.test(tissueBox$Count, tissueBox$Group, p.adjust.method = "BH") #alternative="greater"
output[[3]]
#kruskal.test(Count ~ Group, data = tissueBox)
output <- pairwise.wilcox.test(tissueBox$Count, tissueBox$Group, p.adjust.method = "BH", alternative="greater") #alternative="greater"
output[[3]]
output[[3]]
ggplot(tissueBox, aes(x = Group, y = Count)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90)) +labs(title=TissueVec[i])
output
#kruskal.test(Count ~ Group, data = tissueBox)
output <- pairwise.wilcox.test(tissueBox$Count, tissueBox$Group, p.adjust.method = "BH", alternative="smaller") #alternative="greater"
#kruskal.test(Count ~ Group, data = tissueBox)
output <- pairwise.wilcox.test(tissueBox$Count, tissueBox$Group, p.adjust.method = "BH", alternative="smaller") #alternative="less"
output[[3]]
getwd()
dev.off()
dev.off()
str(backBox)
View(backBox)
setwd("~/Desktop/PostHocAnalyses/Thesis")
setwd("~/HoneyBeePaper/C_R/DESeq2")
ls()
getwd()
load("dataMetrics.Rds")
readRDS("dataMetrics.Rds")
ls()
dataMetrics <- readRDS("dataMetrics.Rds")
View(dataMetrics)
str(dataMetrics)
View(dataMetrics[[1]])
rm(list=ls())
setwd("~/HoneyBeePaper/C_R/DESeq2")
dataMetrics <- readRDS("dataMetrics.Rds")
View(dataMetrics[[1]])
setwd("~/HoneyBeePaper/C_R/EdgeR/edgeR")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
View(dataMetrics[[1]])
setwd("~/HoneyBeePaper/C_R/LimmaVoom")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
View(dataMetrics[[1]])
setwd("~/HoneyBeePaper/N_V/DESeq2")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
View(dataMetrics[[1]])
rm(list=ls())
setwd("~/HoneyBeePaper/N_V/EdgeR/edgeR")
dataMetrics <- readRDS("dataMetrics.Rds")
View(dataMetrics[[1]])
setwd("~/HoneyBeePaper/N_V/LimmaVoom")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
View(dataMetrics[[1]])
rm(list=ls())
setwd("~/HoneyBeePaper/VirusHoneyBee/DESeq2")
dataMetrics <- readRDS("dataMetrics.Rds")
View(dataMetrics[[1]])
setwd("~/HoneyBeePaper/VirusHoneyBee/EdgeR/edgeR")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
View(dataMetrics[[1]])
rm(list=ls())
setwd("~/HoneyBeePaper/VirusHoneyBee/LimmaVoom")
dataMetrics <- readRDS("dataMetrics.Rds")
View(dataMetrics[[1]])
rm(list=ls())
setwd("~/HoneyBeePaper/C_R")
setwd("~/HoneyBeePaper/C_R/DESeq2")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
str(dataMetrics)
dataMetrics <- dataMetrics[order(p.adj),]
dataMetrics <- dataMetrics[order(padj),]
dataMetrics <- dataMetrics[[1]][order(padj),]
colnames(dataMetrics[[1]])
dataMetrics <- dataMetrics[[1]]
dataMetrics <- dataMetrics[order(padj),]
dataMetrics <- dataMetrics[order(dataMetrics$padj),]
View(dataMetrics)
which(dataMetrics$ID=="GB4211")
which(dataMetrics$ID=="GB42111")
which(dataMetrics$ID=="GB48967")
which(dataMetrics$ID=="GB47546")
dataMetrics[15,314,]
dataMetrics[15314,]
dataMetrics[14314,]
dataMetrics[13314,]
dataMetrics[12314,]
dataMetrics[11314,]
dataMetrics[10314,]
dataMetrics[9314,]
which(dataMetrics$padj!="NA")
sum(which(dataMetrics$padj!="NA"))
length(which(dataMetrics$padj!="NA"))
which(dataMetrics$ID=="GB51306")
setwd("~/HoneyBeePaper/C_R/EdgeR/edgeR")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
dataMetrics <- dataMetrics[[1]]
dataMetrics <- dataMetrics[order(dataMetrics$padj),]
View(dataMetrics)
dataMetrics <- dataMetrics[order(dataMetrics$FDR),]
which(dataMetrics$ID=="GB47546")
which(dataMetrics$ID=="GB51306")
length(which(dataMetrics$padj!="NA"))
length(which(dataMetrics$FDR!="NA"))
setwd("~/HoneyBeePaper/C_R/LimmaVoom")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
dataMetrics <- dataMetrics[[1]]
dataMetrics <- dataMetrics[order(dataMetrics$padj),]
View(dataMetrics)
dataMetrics <- dataMetrics[order(dataMetrics$adj.P.Val),]
which(dataMetrics$ID=="GB47546")
which(dataMetrics$ID=="GB51306")
length(which(dataMetrics$adj.P.Val!="NA"))
rm(list=ls())
setwd("~/HoneyBeePaper/N_V/DESeq2")
dataMetrics <- readRDS("dataMetrics.Rds")
dataMetrics <- dataMetrics[[1]]
dataMetrics <- dataMetrics[order(dataMetrics$padj),]
which(dataMetrics$ID=="GB47546")
which(dataMetrics$ID=="GB51306")
length(which(dataMetrics$adj.P.Val!="NA"))
length(which(dataMetrics$padj!="NA"))
setwd("~/HoneyBeePaper/N_V/EdgeR/edgeR")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
dataMetrics <- dataMetrics[[1]]
dataMetrics <- dataMetrics[order(dataMetrics$FDR),]
which(dataMetrics$ID=="GB47546")
which(dataMetrics$ID=="GB51306")
length(which(dataMetrics$FDR!="NA"))
setwd("~/HoneyBeePaper/N_V/LimmaVoom")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
dataMetrics <- dataMetrics[[1]]
dataMetrics <- dataMetrics[order(dataMetrics$adj.P.Val),]
which(dataMetrics$ID=="GB47546")
which(dataMetrics$ID=="GB51306")
length(which(dataMetrics$adj.P.Val!="NA"))
setwd("~/HoneyBeePaper/VirusHoneyBee/DESeq2")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
dataMetrics <- dataMetrics[[1]]
dataMetrics <- dataMetrics[order(dataMetrics$padj),]
which(dataMetrics$ID=="GB47546")
View(dataMetrics)
which(dataMetrics$ID=="gnl|Amel_4.5|GB47546-RA")
which(dataMetrics$ID=="gnl|Amel_4.5|GB51306-RA")
length(which(dataMetrics$padj!="NA"))
setwd("~/HoneyBeePaper/VirusHoneyBee/LimmaVoom")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
dataMetrics <- dataMetrics[[1]]
dataMetrics <- dataMetrics[order(dataMetrics$FDR),]
View(dataMetrics)
dataMetrics <- dataMetrics[order(dataMetrics$adj.P.Val),]
which(dataMetrics$ID=="gnl|Amel_4.5|GB47546-RA")
which(dataMetrics$ID=="gnl|Amel_4.5|GB51306-RA")
length(which(dataMetrics$padj!="NA"))
length(which(dataMetrics$adj.P.Val!="NA"))
setwd("~/HoneyBeePaper/VirusHoneyBee/EdgeR/edgeR")
rm(list=ls())
dataMetrics <- readRDS("dataMetrics.Rds")
dataMetrics <- dataMetrics[[1]]
dataMetrics <- dataMetrics[order(dataMetrics$FDR),]
which(dataMetrics$ID=="gnl|Amel_4.5|GB47546-RA")
which(dataMetrics$ID=="gnl|Amel_4.5|GB51306-RA")
length(which(dataMetrics$FDR!="NA"))
shiny::runApp('~/HoneyBeePaper/VirusHoneyBee/DESeq2/Dashboard/litreSig')
runApp('~/HoneyBeePaper/VirusHoneyBee/DESeq2/Dashboard/litreSig')
setwd("~/HoneyBeePaper/VirusHoneyBee/DESeq2/Dashboard/litreSig")
rm(list=ls())
runApp()
runApp()
??betweenLaneNormalization
runApp()
rm(list=ls())
dat <- readRDS("data.Rds")
dat$ID <- rownames(dat)
dat <- dat[,c(7,1:6)]
View(dat)
rm(list=ls())
runApp()
setwd("~/HoneyBeePaper/VirusHoneyBee/DESeq2/Dashboard/litreSig")
runApp()
dat <- readRDS("data.Rds")
dat$ID <- rownames(dat)
dat <- dat[,c(7,1:6)]
#standardization
RowSD = function(x) {
sqrt(rowSums((x - rowMeans(x))^2)/(dim(x)[2] - 1))
}
dat_Rownames <- dat$ID
dat = dat[,-1]
rownames(dat) <- dat_Rownames
dat <- betweenLaneNormalization(as.matrix(dat), which="full", round=FALSE)
dat = as.data.frame(dat)
dat = mutate(dat, mean = (C.1+C.2+C.3+T.1+T.2+T.3)/6, stdev = RowSD(cbind(C.1,C.2,C.3,T.1,T.2,T.3)))
rownames(dat)=dat_Rownames
dat$ID <- dat_Rownames
datqps <- t(apply(as.matrix(dat[,1:6]), 1, scale))
datqps <- as.data.frame(datqps)
colnames(datqps) <- colnames(dat[,1:6])
datqps$ID <- rownames(datqps)
nID <- which(is.nan(datqps$S1.1))
datqps[nID,1:6] <- 0
data <- datqps[,c(7,1:6)]
dat[,-1] <- log(dat[,-1]+1)
runApp()
runApp()
runApp()
rm(list=ls())
dat <- readRDS("data.Rds")
dat$ID <- rownames(dat)
dat <- dat[,c(7,1:6)]
#standardization
RowSD = function(x) {
sqrt(rowSums((x - rowMeans(x))^2)/(dim(x)[2] - 1))
}
dat_Rownames <- dat$ID
dat = dat[,-1]
rownames(dat) <- dat_Rownames
dat <- betweenLaneNormalization(as.matrix(dat), which="full", round=FALSE)
dat = as.data.frame(dat)
dat = mutate(dat, mean = (C.1+C.2+C.3+T.1+T.2+T.3)/6, stdev = RowSD(cbind(C.1,C.2,C.3,T.1,T.2,T.3)))
rownames(dat)=dat_Rownames
dat$ID <- dat_Rownames
datqps <- t(apply(as.matrix(dat[,1:6]), 1, scale))
datqps <- as.data.frame(datqps)
colnames(datqps) <- colnames(dat[,1:6])
datqps$ID <- rownames(datqps)
nID <- which(is.nan(datqps$S1.1))
datqps[nID,1:6] <- 0
data <- datqps[,c(7,1:6)]
dat <- data
dat[,-1] <- log(dat[,-1]+1)
dat <- data
runApp()
setwd("~/Desktop/RPharm")
setwd("~/Desktop/RPharm")
