SBV$Response = "SBV"
Mort <- readRDS("Mort/PVal_Mort.Rds")
Mort$Response = "Mort"
PValues <- rbind(IAPV, SBV, Mort)
str(PValues)
View(PValues)
View(IAPV)
View(IAPV)
View(Mort)
View(SBV)
rm(list=ls())
dev.off()
setwd("~/HoneyBeePaper/ResistanceTolerance/SBV")
rsq <- function (x, y) cor(x, y) ^ 2
Variables <- read_csv("~/HoneyBeePaper/Variables.csv")
as.data.frame(Variables[,7])
as.data.frame(Variables)
varSBV <- as.data.frame(Variables[,6])[,1]
head(varSBV)
varSBV
head(as.data.frame(Variables[,6]))
setwd("~/HoneyBeePaper/ResistanceTolerance/SBV")
source("functionRT_SBV.R")
rm(list=ls())
source("functionRT_SBV.R")
data <- as.data.frame(readRDS("../../NC_NR_VC_VR/data/data.Rds"))
PVal = data.frame()
type = "Raw"
PVal <- functionRT(data=data, type=type, PVal=PVal)
type = "BLN"
dataBTN <- betweenLaneNormalization(as.matrix(data), which="full", round=FALSE)
dataBTN = as.data.frame(dataBTN)
PVal <- functionRT(data=dataBTN, type=type, PVal=PVal)
type = "Log"
dataLog <- log(data+1)
PVal <- functionRT(data=dataLog, type=type, PVal=PVal)
type = "Standardize"
# Next lines to standardize
RowSD = function(x) {
sqrt(rowSums((x - rowMeans(x))^2)/(dim(x)[2] - 1))
}
colData <- colnames(data)
# Normalize for sequencing depth and other distributional differences between lanes
data <- betweenLaneNormalization(as.matrix(data), which="full", round=FALSE)
data = as.data.frame(data)
rowNamesDat = rownames(data)
# Add mean and standard deviation for each row/gene
data = data %>% mutate(mean= rowMeans(as.matrix(data)), stdev=rowSds(as.matrix(data)))
data$mean <- as.numeric(data$mean)
datas <- t(apply(as.matrix(data[,1:(ncol(data)-2)]), 1, scale))
datas <- as.data.frame(datas)
colnames(datas) <- colData
# Indices of the NAN rows. They had stdev=0 in the filt data
nID <- which(is.nan(datas$NC.1))
# Set these filtered values that have all same values for samples to 0
datas[nID,] <- 0
datas <- datas[,1:24]
rownames(datas) <- rowNamesDat
PVal_SBV <- functionRT(data=datas, type=type, PVal=PVal)
saveRDS(PVal_SBV, "PVal_SBV.Rds")
setwd("~/HoneyBeePaper/ResistanceTolerance/Mort")
rm(list=ls())
as.data.frame(Variables[,5])
Variables <- read_csv("~/HoneyBeePaper/Variables.csv")
as.data.frame(Variables[,5])
getwd()
rm(list=ls())
dev.off()
source("functionRT_Mort.R")
data <- as.data.frame(readRDS("../../NC_NR_VC_VR/data/data.Rds"))
PVal = data.frame()
type = "Raw"
PVal <- functionRT(data=data, type=type, PVal=PVal)
type = "BLN"
dataBTN <- betweenLaneNormalization(as.matrix(data), which="full", round=FALSE)
dataBTN = as.data.frame(dataBTN)
PVal <- functionRT(data=dataBTN, type=type, PVal=PVal)
type = "Log"
dataLog <- log(data+1)
PVal <- functionRT(data=dataLog, type=type, PVal=PVal)
type = "Standardize"
# Next lines to standardize
RowSD = function(x) {
sqrt(rowSums((x - rowMeans(x))^2)/(dim(x)[2] - 1))
}
colData <- colnames(data)
# Normalize for sequencing depth and other distributional differences between lanes
data <- betweenLaneNormalization(as.matrix(data), which="full", round=FALSE)
data = as.data.frame(data)
rowNamesDat = rownames(data)
# Add mean and standard deviation for each row/gene
data = data %>% mutate(mean= rowMeans(as.matrix(data)), stdev=rowSds(as.matrix(data)))
data$mean <- as.numeric(data$mean)
datas <- t(apply(as.matrix(data[,1:(ncol(data)-2)]), 1, scale))
datas <- as.data.frame(datas)
colnames(datas) <- colData
# Indices of the NAN rows. They had stdev=0 in the filt data
nID <- which(is.nan(datas$NC.1))
# Set these filtered values that have all same values for samples to 0
datas[nID,] <- 0
datas <- datas[,1:24]
rownames(datas) <- rowNamesDat
PVal_Mort <- functionRT(data=datas, type=type, PVal=PVal)
saveRDS(PVal_Mort, "PVal_Mort.Rds")
setwd("~/HoneyBeePaper/ResistanceTolerance")
rm(list=ls())
dev.off()
IAPV <- readRDS("IAPV/PVal_IAPV.Rds")
IAPV$Response = "IAPV"
SBV <- readRDS("SBV/PVal_SBV.Rds")
SBV$Response = "SBV"
Mort <- readRDS("Mort/PVal_Mort.Rds")
Mort$Response = "Mort"
View(IAPV)
View(Mort)
View(SBV)
PValues <- rbind(IAPV, SBV, Mort)
View(PValues)
IAPV <- readRDS("IAPV/PVal_IAPV.Rds")
IAPV$Response = "IAPV"
head(IAPV)
newdata <- IAPV[order(PVal),]
IAPV2 <- IAPV[order(IAPV$PVal),]
head(IAPV2)
IAPV_PValues <- IAPV[order(IAPV$PVal),]
SBV_PValues <- SBV[order(SBV$PVal),]
Mort_PValues <- Mort[order(Mort$PVal),]
All_PValues <- rbind(IAPV, SBV, Mort)
write.csv(All_PValues, "All_PValues.csv")
write.csv(IAPV_PValues, "IAPV_PValues.csv")
write.csv(SBV_PValues, "SBV_PValues.csv")
write.csv(Mort_PValues, "Mort_PValues.csv")
dev.off()
rm(list=ls())
IAPV <- readRDS("IAPV/PVal_IAPV.Rds")
IAPV$Response = "IAPV"
IAPVIAPV[order(IAPV$PVal),]
rm(list=ls())
dev.off()
setwd("~/HoneyBeePaper/ResistanceTolerance")
IAPV <- readRDS("IAPV/PVal_IAPV.Rds")
IAPV$Response = "IAPV"
IAPVIAPV[order(IAPV$PVal),]
SBV <- readRDS("SBV/PVal_SBV.Rds")
SBV <- readRDS("SBV/PVal_SBV.Rds")
SBV$Response = "SBV"
Mort <- readRDS("Mort/PVal_Mort.Rds")
Mort$Response = "Mort"
IAPV_PValues <- IAPV[order(IAPV$PVal),]
SBV_PValues <- SBV[order(SBV$PVal),]
Mort_PValues <- Mort[order(Mort$PVal),]
All_PValues <- rbind(IAPV, SBV, Mort)
write.csv(IAPV_PValues, "IAPV_PValues.csv")
write.csv(SBV_PValues, "SBV_PValues.csv")
write.csv(Mort_PValues, "Mort_PValues.csv")
write.csv(All_PValues, "All_PValues.csv")
rm(list=ls())
dev.off()
getwd()
IAPV <- readRDS("IAPV/PVal_IAPV.Rds")
IAPV$Response = "IAPV"
SBV <- readRDS("SBV/PVal_SBV.Rds")
SBV$Response = "SBV"
Mort <- readRDS("Mort/PVal_Mort.Rds")
Mort$Response = "Mort"
IAPV_PValues <- IAPV[order(IAPV$PVal),]
SBV_PValues <- SBV[order(SBV$PVal),]
Mort_PValues <- Mort[order(Mort$PVal),]
All_PValues <- rbind(IAPV, SBV, Mort)
All_PValues <- All_PValues[order(All_PValues$PVal),]
write.csv(All_PValues, "All_PValues.csv")
rm(list=ls())
dev.off()
getwd()
setwd("~/HoneyBeePaper/Tissues")
noninfected <- readRDS("../N_V/DESeq2/RDN.Rds")
infected <- readRDS("../N_V/DESeq2/RDV.Rds")
chestnut <- readRDS("../C_R/DESeq2/RDC.Rds")
rockrose <- readRDS("../C_R/DESeq2/RDR.Rds")
tolerance <- readRDS("../ResistanceTolerance/tolerance.Rds")
resistance <- readRDS("../ResistanceTolerance/resistance.Rds")
data <- readRDS("../N_V/data/data.Rds")
rutterAll <- rownames(data)
geneTable <- read_csv("am.gene_info.csv", col_names=FALSE)
colnames(geneTable)[2] = "Entrez"
colnames(geneTable)[6] = "BeeBase"
geneTable <- geneTable[which(geneTable$BeeBase %in% grep("GB", geneTable$BeeBase, value=TRUE)),]
geneTable$BeeBase <- unlist(lapply(geneTable$BeeBase, function (x) unlist(strsplit(x, "[:]"))[2]))
# Only 8764 of the 15,314 Rutter BeeBase IDs are in the conversion table
geneTable <- geneTable[which(geneTable$BeeBase %in% rutterAll),]
View(geneTable)
johnson <- read_excel("Table_S1.xlsx")
library(readxl)
library(readr)
library(reshape)
johnson <- read_excel("Table_S1.xlsx")
View(johnson)
colJohnson <- unlist(as.data.frame(johnson[2,]))
attributes(colJohnson) <- NULL
colnames(johnson) <- colJohnson
johnson <- johnson[3:nrow(johnson),]
colnames(johnson)[1] = "Entrez"
write.csv(johnson, "johnson.csv")
###########################################################
# Boxplot background Data
backBox <- johnson[which(johnson$Entrez %in% geneTable$Entrez),2:ncol(johnson)]
Antenna <- as.numeric(unlist(backBox[,grep("Antenna", colnames(backBox), ignore.case=TRUE)]))
str(Antenna)
str(johnson)
View(johnson)
Antenna
str(Antenna)
length(which(johnson$Entrez %in% geneTable$Entrez))
str(johnson)
head(backBox[,grep("Antenna", colnames(backBox), ignore.case=TRUE)])
head(Antenna)
Ganglia <- as.numeric(unlist(backBox[,grep("Ganglia", colnames(backBox), ignore.case=TRUE)]))
Hypopharyngeal <- as.numeric(unlist(backBox[,grep("Hypopharyngeal", colnames(backBox), ignore.case=TRUE)]))
Mandibular <- as.numeric(unlist(backBox[,grep("Mandibular", colnames(backBox), ignore.case=TRUE)]))
Midgut <- as.numeric(unlist(backBox[,grep("Midgut", colnames(backBox), ignore.case=TRUE)]))
Malpighian <- as.numeric(unlist(backBox[,grep("Malpighian", colnames(backBox), ignore.case=TRUE)]))
Muscle <- as.numeric(unlist(backBox[,grep("Muscle", colnames(backBox), ignore.case=TRUE)]))
Nasonov <- as.numeric(unlist(backBox[,grep("Nasonov", colnames(backBox), ignore.case=TRUE)]))
Sting <- as.numeric(unlist(backBox[,grep("Sting", colnames(backBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(backBox[,grep("Brain", colnames(backBox), ignore.case=TRUE)]))
backBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
backBox <- melt(backBox2)
colnames(backBox) <- c("Tissue", "Count")
backBox$Count <- log(backBox$Count + 1)
backBox$Group <- "allData"
head(backBox)
png(paste0('All.jpg'))
print({
ggplot(backBox, aes(x = Tissue, y = Count)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90))
})
dev.off()
totalClusterBox = data.frame()
i=1
clusterVec = c("noninfected", "infected", "chestnut", "rockrose", "tolerance", "resistance")
cluster="noninfected"
geneCluster <- geneTable[which(geneTable$BeeBase %in% get(cluster)),]
colnames(geneCluster)[2] = "Entrez"
johnsonCluster <- as.data.frame(johnson[which(johnson$Entrez %in% geneCluster$Entrez),])
johnsonCluster[,2:ncol(johnsonCluster)] <- as.data.frame(sapply(johnsonCluster[,2:ncol(johnsonCluster)], as.numeric))
str(johnsonCluster)
# Boxplot foreground cluster
clusterBox <- johnsonCluster[,2:ncol(johnsonCluster)]
clusterBox <- clusterBox[,grep("Forager", colnames(clusterBox), ignore.case=TRUE)]
Antenna <- as.numeric(unlist(clusterBox[,grep("Antenna", colnames(clusterBox), ignore.case=TRUE)]))
Antenna
str(clusterBox)
rm(list=ls())
getwd()
noninfected <- readRDS("../N_V/DESeq2/RDN.Rds")
infected <- readRDS("../N_V/DESeq2/RDV.Rds")
chestnut <- readRDS("../C_R/DESeq2/RDC.Rds")
rockrose <- readRDS("../C_R/DESeq2/RDR.Rds")
tolerance <- readRDS("../ResistanceTolerance/tolerance.Rds")
resistance <- readRDS("../ResistanceTolerance/resistance.Rds")
data <- readRDS("../N_V/data/data.Rds")
rutterAll <- rownames(data)
geneTable <- read_csv("am.gene_info.csv", col_names=FALSE)
colnames(geneTable)[2] = "Entrez"
colnames(geneTable)[6] = "BeeBase"
geneTable <- geneTable[which(geneTable$BeeBase %in% grep("GB", geneTable$BeeBase, value=TRUE)),]
geneTable$BeeBase <- unlist(lapply(geneTable$BeeBase, function (x) unlist(strsplit(x, "[:]"))[2]))
# Only 8764 of the 15,314 Rutter BeeBase IDs are in the conversion table (convert between EntrezID and BeeBase)
geneTable <- geneTable[which(geneTable$BeeBase %in% rutterAll),]
johnson <- read_excel("Table_S1.xlsx")
colJohnson <- unlist(as.data.frame(johnson[2,]))
attributes(colJohnson) <- NULL
colnames(johnson) <- colJohnson
johnson <- johnson[3:nrow(johnson),]
colnames(johnson)[1] = "Entrez"
write.csv(johnson, "johnson.csv")
###########################################################
# Boxplot background Data
# Only 8739 Johnson Entrez is in geneTable Entrez
backBox <- johnson[which(johnson$Entrez %in% geneTable$Entrez),2:ncol(johnson)]
View(backBox)
# All 6 values for each tissue type for each gene
Antenna <- as.numeric(unlist(backBox[,grep("Antenna", colnames(backBox), ignore.case=TRUE)]))
Ganglia <- as.numeric(unlist(backBox[,grep("Ganglia", colnames(backBox), ignore.case=TRUE)]))
Hypopharyngeal <- as.numeric(unlist(backBox[,grep("Hypopharyngeal", colnames(backBox), ignore.case=TRUE)]))
Mandibular <- as.numeric(unlist(backBox[,grep("Mandibular", colnames(backBox), ignore.case=TRUE)]))
Midgut <- as.numeric(unlist(backBox[,grep("Midgut", colnames(backBox), ignore.case=TRUE)]))
Malpighian <- as.numeric(unlist(backBox[,grep("Malpighian", colnames(backBox), ignore.case=TRUE)]))
Muscle <- as.numeric(unlist(backBox[,grep("Muscle", colnames(backBox), ignore.case=TRUE)]))
Nasonov <- as.numeric(unlist(backBox[,grep("Nasonov", colnames(backBox), ignore.case=TRUE)]))
Sting <- as.numeric(unlist(backBox[,grep("Sting", colnames(backBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(backBox[,grep("Brain", colnames(backBox), ignore.case=TRUE)]))
backBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
str(backBox2)
8739*6
backBox <- melt(backBox2)
colnames(backBox) <- c("Tissue", "Count")
backBox$Count <- log(backBox$Count + 1)
backBox$Group <- "allData"
str(backBox)
png(paste0('All.jpg'))
print({
ggplot(backBox, aes(x = Tissue, y = Count)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90))
})
dev.off()
ggplot(backBox, aes(x = Tissue, y = Count)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90))
dev.off()
dev.off()
totalClusterBox = data.frame()
i=1
clusterVec = c("noninfected", "infected", "chestnut", "rockrose", "tolerance", "resistance")
clusterVec="noninfected"
geneCluster <- geneTable[which(geneTable$BeeBase %in% get(cluster)),]
cluster="infected"
str(cluster)
geneCluster <- geneTable[which(geneTable$BeeBase %in% get(cluster)),]
str(geneCluster)
cluster="chestnut"
geneCluster <- geneTable[which(geneTable$BeeBase %in% get(cluster)),]
str(geneCluster)
colnames(geneCluster)[2] = "Entrez"
johnsonCluster <- as.data.frame(johnson[which(johnson$Entrez %in% geneCluster$Entrez),])
johnsonCluster[,2:ncol(johnsonCluster)] <- as.data.frame(sapply(johnsonCluster[,2:ncol(johnsonCluster)], as.numeric))
View(johnsonCluter)
View(johnsonCluster)
cluster
# Boxplot foreground cluster
clusterBox <- johnsonCluster[,2:ncol(johnsonCluster)]
clusterBox <- clusterBox[,grep("Forager", colnames(clusterBox), ignore.case=TRUE)]
Antenna <- as.numeric(unlist(clusterBox[,grep("Antenna", colnames(clusterBox), ignore.case=TRUE)]))
Ganglia <- as.numeric(unlist(clusterBox[,grep("Ganglia", colnames(clusterBox), ignore.case=TRUE)]))
Hypopharyngeal <- as.numeric(unlist(clusterBox[,grep("Hypopharyngeal", colnames(clusterBox), ignore.case=TRUE)]))
Mandibular <- as.numeric(unlist(clusterBox[,grep("Mandibular", colnames(clusterBox), ignore.case=TRUE)]))
Midgut <- as.numeric(unlist(clusterBox[,grep("Midgut", colnames(clusterBox), ignore.case=TRUE)]))
Malpighian <- as.numeric(unlist(clusterBox[,grep("Malpighian", colnames(clusterBox), ignore.case=TRUE)]))
Muscle <- as.numeric(unlist(clusterBox[,grep("Muscle", colnames(clusterBox), ignore.case=TRUE)]))
Nasonov <- as.numeric(unlist(clusterBox[,grep("Nasonov", colnames(clusterBox), ignore.case=TRUE)]))
Sting <- as.numeric(unlist(clusterBox[,grep("Sting", colnames(clusterBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(clusterBox[,grep("Brain", colnames(clusterBox), ignore.case=TRUE)]))
clusterBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
clusterBox <- melt(clusterBox2)
colnames(clusterBox) <- c("Tissue", "Count")
clusterBox$Cluster <- c(clusterVec[i])
clusterBox$Count <- log(clusterBox$Count + 1)
totalClusterBox = rbind(totalClusterBox, clusterBox)
totalClusterBox = data.frame()
i=1
clusterVec = c("noninfected", "infected", "chestnut", "rockrose", "tolerance", "resistance")
for (cluster in clusterVec){
geneCluster <- geneTable[which(geneTable$BeeBase %in% get(cluster)),]
colnames(geneCluster)[2] = "Entrez"
johnsonCluster <- as.data.frame(johnson[which(johnson$Entrez %in% geneCluster$Entrez),])
johnsonCluster[,2:ncol(johnsonCluster)] <- as.data.frame(sapply(johnsonCluster[,2:ncol(johnsonCluster)], as.numeric))
# Boxplot foreground cluster
clusterBox <- johnsonCluster[,2:ncol(johnsonCluster)]
clusterBox <- clusterBox[,grep("Forager", colnames(clusterBox), ignore.case=TRUE)]
Antenna <- as.numeric(unlist(clusterBox[,grep("Antenna", colnames(clusterBox), ignore.case=TRUE)]))
Ganglia <- as.numeric(unlist(clusterBox[,grep("Ganglia", colnames(clusterBox), ignore.case=TRUE)]))
Hypopharyngeal <- as.numeric(unlist(clusterBox[,grep("Hypopharyngeal", colnames(clusterBox), ignore.case=TRUE)]))
Mandibular <- as.numeric(unlist(clusterBox[,grep("Mandibular", colnames(clusterBox), ignore.case=TRUE)]))
Midgut <- as.numeric(unlist(clusterBox[,grep("Midgut", colnames(clusterBox), ignore.case=TRUE)]))
Malpighian <- as.numeric(unlist(clusterBox[,grep("Malpighian", colnames(clusterBox), ignore.case=TRUE)]))
Muscle <- as.numeric(unlist(clusterBox[,grep("Muscle", colnames(clusterBox), ignore.case=TRUE)]))
Nasonov <- as.numeric(unlist(clusterBox[,grep("Nasonov", colnames(clusterBox), ignore.case=TRUE)]))
Sting <- as.numeric(unlist(clusterBox[,grep("Sting", colnames(clusterBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(clusterBox[,grep("Brain", colnames(clusterBox), ignore.case=TRUE)]))
clusterBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
clusterBox <- melt(clusterBox2)
colnames(clusterBox) <- c("Tissue", "Count")
clusterBox$Cluster <- c(clusterVec[i])
clusterBox$Count <- log(clusterBox$Count + 1)
totalClusterBox = rbind(totalClusterBox, clusterBox)
i=i+1
}
View(totalClusterBox)
str(totalClusterBox)
TissueVec <- c("Antenna", "Ganglia", "Hypopharyngeal", "Mandibular", "Midgut", "Malpighian", "Muscle", "Nasonov", "Sting", "Brain")
heatmapDat <- data.frame()
i=1
tissue="Antenna"
tissueBox = data.frame()
tissueBox = rbind(tissueBox, backBox[which(backBox$Tissue==tissue),])
tissueBox = rbind(tissueBox, totalClusterBox[which(totalClusterBox$Tissue==tissue),])
tissueBox = data.frame()
tissueBox = rbind(tissueBox, backBox[which(backBox$Tissue==tissue),])
tissueBox = rbind(tissueBox, totalClusterBox[which(totalClusterBox$Tissue==tissue),])
str(tissueBox)
tissueBox = data.frame()
tissueBox = rbind(tissueBox, backBox[which(backBox$Tissue==tissue),])
str(tissueBox)
tissueBox = rbind(tissueBox, totalClusterBox[which(totalClusterBox$Tissue==tissue),])
str(totalClusterBox[which(totalClusterBox$Tissue==tissue),])
rm(list=ls())
dev.off()
dev.off()
noninfected <- readRDS("../N_V/DESeq2/RDN.Rds")
infected <- readRDS("../N_V/DESeq2/RDV.Rds")
chestnut <- readRDS("../C_R/DESeq2/RDC.Rds")
rockrose <- readRDS("../C_R/DESeq2/RDR.Rds")
tolerance <- readRDS("../ResistanceTolerance/tolerance.Rds")
resistance <- readRDS("../ResistanceTolerance/resistance.Rds")
data <- readRDS("../N_V/data/data.Rds")
rutterAll <- rownames(data)
geneTable <- read_csv("am.gene_info.csv", col_names=FALSE)
colnames(geneTable)[2] = "Entrez"
colnames(geneTable)[6] = "BeeBase"
geneTable <- geneTable[which(geneTable$BeeBase %in% grep("GB", geneTable$BeeBase, value=TRUE)),]
geneTable$BeeBase <- unlist(lapply(geneTable$BeeBase, function (x) unlist(strsplit(x, "[:]"))[2]))
# Only 8764 of the 15,314 Rutter BeeBase IDs are in the conversion table (convert between EntrezID and BeeBase)
geneTable <- geneTable[which(geneTable$BeeBase %in% rutterAll),]
johnson <- read_excel("Table_S1.xlsx")
colJohnson <- unlist(as.data.frame(johnson[2,]))
attributes(colJohnson) <- NULL
colnames(johnson) <- colJohnson
johnson <- johnson[3:nrow(johnson),]
colnames(johnson)[1] = "Entrez"
write.csv(johnson, "johnson.csv")
###########################################################
# Boxplot background Data
# Only 8739 Johnson Entrez is in geneTable Entrez
backBox <- johnson[which(johnson$Entrez %in% geneTable$Entrez),2:ncol(johnson)]
# All 6 values for each tissue type for each gene
Antenna <- as.numeric(unlist(backBox[,grep("Antenna", colnames(backBox), ignore.case=TRUE)]))
Ganglia <- as.numeric(unlist(backBox[,grep("Ganglia", colnames(backBox), ignore.case=TRUE)]))
Hypopharyngeal <- as.numeric(unlist(backBox[,grep("Hypopharyngeal", colnames(backBox), ignore.case=TRUE)]))
Mandibular <- as.numeric(unlist(backBox[,grep("Mandibular", colnames(backBox), ignore.case=TRUE)]))
Midgut <- as.numeric(unlist(backBox[,grep("Midgut", colnames(backBox), ignore.case=TRUE)]))
Malpighian <- as.numeric(unlist(backBox[,grep("Malpighian", colnames(backBox), ignore.case=TRUE)]))
Muscle <- as.numeric(unlist(backBox[,grep("Muscle", colnames(backBox), ignore.case=TRUE)]))
Nasonov <- as.numeric(unlist(backBox[,grep("Nasonov", colnames(backBox), ignore.case=TRUE)]))
Sting <- as.numeric(unlist(backBox[,grep("Sting", colnames(backBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(backBox[,grep("Brain", colnames(backBox), ignore.case=TRUE)]))
backBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
backBox <- melt(backBox2)
colnames(backBox) <- c("Tissue", "Count")
backBox$Count <- log(backBox$Count + 1)
backBox$Group <- "allData"
png(paste0('All.jpg'))
print({
ggplot(backBox, aes(x = Tissue, y = Count)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90))
})
dev.off()
totalGroupBox = data.frame()
i=1
GroupVec = c("noninfected", "infected", "chestnut", "rockrose", "tolerance", "resistance")
for (Group in GroupVec){
geneGroup <- geneTable[which(geneTable$BeeBase %in% get(Group)),]
colnames(geneGroup)[2] = "Entrez"
johnsonGroup <- as.data.frame(johnson[which(johnson$Entrez %in% geneGroup$Entrez),])
johnsonGroup[,2:ncol(johnsonGroup)] <- as.data.frame(sapply(johnsonGroup[,2:ncol(johnsonGroup)], as.numeric))
# Boxplot foreground Group
GroupBox <- johnsonGroup[,2:ncol(johnsonGroup)]
GroupBox <- GroupBox[,grep("Forager", colnames(GroupBox), ignore.case=TRUE)]
Antenna <- as.numeric(unlist(GroupBox[,grep("Antenna", colnames(GroupBox), ignore.case=TRUE)]))
Ganglia <- as.numeric(unlist(GroupBox[,grep("Ganglia", colnames(GroupBox), ignore.case=TRUE)]))
Hypopharyngeal <- as.numeric(unlist(GroupBox[,grep("Hypopharyngeal", colnames(GroupBox), ignore.case=TRUE)]))
Mandibular <- as.numeric(unlist(GroupBox[,grep("Mandibular", colnames(GroupBox), ignore.case=TRUE)]))
Midgut <- as.numeric(unlist(GroupBox[,grep("Midgut", colnames(GroupBox), ignore.case=TRUE)]))
Malpighian <- as.numeric(unlist(GroupBox[,grep("Malpighian", colnames(GroupBox), ignore.case=TRUE)]))
Muscle <- as.numeric(unlist(GroupBox[,grep("Muscle", colnames(GroupBox), ignore.case=TRUE)]))
Nasonov <- as.numeric(unlist(GroupBox[,grep("Nasonov", colnames(GroupBox), ignore.case=TRUE)]))
Sting <- as.numeric(unlist(GroupBox[,grep("Sting", colnames(GroupBox), ignore.case=TRUE)]))
Brain <- as.numeric(unlist(GroupBox[,grep("Brain", colnames(GroupBox), ignore.case=TRUE)]))
GroupBox2 <- data.frame(Antenna=Antenna, Ganglia=Ganglia, Hypopharyngeal=Hypopharyngeal, Mandibular=Mandibular, Midgut=Midgut, Malpighian=Malpighian, Muscle=Muscle, Nasonov=Nasonov, Sting=Sting, Brain=Brain)
GroupBox <- melt(GroupBox2)
colnames(GroupBox) <- c("Tissue", "Count")
GroupBox$Group <- c(GroupVec[i])
GroupBox$Count <- log(GroupBox$Count + 1)
totalGroupBox = rbind(totalGroupBox, GroupBox)
i=i+1
}
TissueVec <- c("Antenna", "Ganglia", "Hypopharyngeal", "Mandibular", "Midgut", "Malpighian", "Muscle", "Nasonov", "Sting", "Brain")
heatmapDat <- data.frame()
i=1
tissue=TissueVec[1]
tissueBox = data.frame()
tissueBox = rbind(tissueBox, backBox[which(backBox$Tissue==tissue),])
tissueBox = rbind(tissueBox, totalGroupBox[which(totalGroupBox$Tissue==tissue),])
str(tissueBox)
tissueBox$Group = as.factor(tissueBox$Group)
head(tissueBox)
output
#kruskal.test(Count ~ Group, data = tissueBox)
output <- pairwise.wilcox.test(tissueBox$Count, tissueBox$Group, p.adjust.method = "BH")
output
output[[3]][1:6]
output[[3]]
??pairwise.wilcox.test
i
tissueBox = data.frame()
tissueBox = rbind(tissueBox, backBox[which(backBox$Tissue==tissue),])
tissueBox = rbind(tissueBox, totalGroupBox[which(totalGroupBox$Tissue==tissue),])
tissueBox$Group = as.factor(tissueBox$Group)
#kruskal.test(Count ~ Group, data = tissueBox)
output <- pairwise.wilcox.test(tissueBox$Count, tissueBox$Group, p.adjust.method = "BH") #alternative="greater"
output[[3]]
#kruskal.test(Count ~ Group, data = tissueBox)
output <- pairwise.wilcox.test(tissueBox$Count, tissueBox$Group, p.adjust.method = "BH", alternative="greater") #alternative="greater"
output[[3]]
output[[3]]
ggplot(tissueBox, aes(x = Group, y = Count)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90)) +labs(title=TissueVec[i])
output
#kruskal.test(Count ~ Group, data = tissueBox)
output <- pairwise.wilcox.test(tissueBox$Count, tissueBox$Group, p.adjust.method = "BH", alternative="smaller") #alternative="greater"
#kruskal.test(Count ~ Group, data = tissueBox)
output <- pairwise.wilcox.test(tissueBox$Count, tissueBox$Group, p.adjust.method = "BH", alternative="smaller") #alternative="less"
output[[3]]
getwd()
dev.off()
dev.off()
str(backBox)
View(backBox)
setwd("~/Desktop/PostHocAnalyses/Thesis")
