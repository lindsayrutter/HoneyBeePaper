RDC <- readRDS("../C_R/DESeq2/RDC.Rds")
RDR <- readRDS("../C_R/DESeq2/RDR.Rds")
RD_DIET_TOTAL <- readRDS("../C_R/DESeq2/RD_DIET_TOTAL.Rds")
REC <- readRDS("../C_R/EdgeR/edgeR/REC.Rds")
RER <- readRDS("../C_R/EdgeR/edgeR/RER.Rds")
RE_DIET_TOTAL <- readRDS("../C_R/EdgeR/edgeR/RE_DIET_TOTAL.Rds")
RLC <- readRDS("../C_R/LimmaVoom/RLC.Rds")
RLR <- readRDS("../C_R/LimmaVoom/RLR.Rds")
RL_DIET_TOTAL <- readRDS("../C_R/LimmaVoom/RL_DIET_TOTAL.Rds")
RDV <- readRDS("../N_V/DESeq2/RDV.Rds")
RDN <- readRDS("../N_V/DESeq2/RDN.Rds")
RD_VIRUS_TOTAL <- readRDS("../N_V/DESeq2/RD_VIRUS_TOTAL.Rds")
REV <- readRDS("../N_V/EdgeR/edgeR/REV.Rds")
REN <- readRDS("../N_V/EdgeR/edgeR/REN.Rds")
RE_VIRUS_TOTAL <- readRDS("../N_V/EdgeR/edgeR/RE_VIRUS_TOTAL.Rds")
GDV <- readRDS("../VirusHoneyBee/DESeq2/GDV.Rds")
GDC <- readRDS("../VirusHoneyBee/DESeq2/GDC.Rds")
GD_TOTAL <- readRDS("../VirusHoneyBee/DESeq2/GD_TOTAL.Rds")
GEV <- readRDS("../VirusHoneyBee/EdgeR/edgeR/GEV.Rds")
GEC <- readRDS("../VirusHoneyBee/EdgeR/edgeR/GEC.Rds")
GE_TOTAL <- readRDS("../VirusHoneyBee/EdgeR/edgeR/GE_TOTAL.Rds")
GLV <- readRDS("../VirusHoneyBee/LimmaVoom/GLV.Rds")
GLC <- readRDS("../VirusHoneyBee/LimmaVoom/GLC.Rds")
GL_TOTAL <- readRDS("../VirusHoneyBee/LimmaVoom/GL_TOTAL.Rds")
int_GD_GE_TOTAL = intersect(GD_TOTAL, GE_TOTAL)
int_GD_GL_TOTAL = intersect(GD_TOTAL, GL_TOTAL)
int_GE_GL_TOTAL = intersect(GE_TOTAL, GL_TOTAL)
int_GD_GE_GL_TOTAL = intersect(intersect(GD_TOTAL, GE_TOTAL), GL_TOTAL)
int_GDV_GEV = intersect(GDV, GEV)
int_GDV_GLV = intersect(GDV, GLV)
int_GEV_GLV = intersect(GEV, GLV)
int_GDV_GEV_GLV = intersect(intersect(GDV, GEV), GLV)
int_GDC_GEC = intersect(GDC, GEC)
int_GDC_GLC = intersect(GDC, GLC)
int_GEC_GLC = intersect(GEC, GLC)
int_GDC_GEC_GLC = intersect(intersect(GDC, GEC), GLC)
int_RD_RE_DIET_TOTAL = intersect(RD_DIET_TOTAL, RE_DIET_TOTAL)
int_RD_RL_DIET_TOTAL = intersect(RD_DIET_TOTAL, RL_DIET_TOTAL)
int_RE_RL_DIET_TOTAL = intersect(RE_DIET_TOTAL, RL_DIET_TOTAL)
int_RD_RE_RL_DIET_TOTAL = intersect(intersect(RD_DIET_TOTAL, RE_DIET_TOTAL), RL_DIET_TOTAL)
int_RDC_REC = intersect(RDC, REC)
int_RDC_RLC = intersect(RDC, RLC)
int_REC_RLC = intersect(REC, RLC)
int_RDC_REC_RLC = intersect(intersect(RDC, REC), RLC)
int_RDR_RER = intersect(RDR, RER)
int_RDR_RLR = intersect(RDR, RLR)
int_RER_RLR = intersect(RER, RLR)
int_RDR_RER_RLR = intersect(intersect(RDR, RER), RLR)
int_RD_RE_VIRUS_TOTAL = intersect(RD_VIRUS_TOTAL, RE_VIRUS_TOTAL)
int_RDV_REV = intersect(RDV, REV)
int_RDN_REN = intersect(RDN, REN)
source('~/Desktop/HoneyBeePaper/Overlaps/Overlaps.R')
int_GD_GE_GL_RD_TOTAL = intersect(GD_TOTAL, GE_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL)
int_GD_GE_GL_RD_TOTAL = intersect(intersect(GD_TOTAL, GE_TOTAL), GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL)
int_GD_GE_GL_RD_TOTAL = intersect(intersect(GD_TOTAL, GE_TOTAL), intersect(GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GL_RD_RE_TOTAL = intersect(GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL)
int_GD_GE_GL_RD_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GD_GE_GL_RD_TOTAL
int_GD_GE_GL_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, GL_TOTAL, RE_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GD_GE_GL_RE_TOTAL
length(GD_TOTAL)
length(GE_TOTAL)
length(GL_TOTAL)
length(RD_VIRUS_TOTAL)
length(RE_VIRUS_TOTAL)
int_GD_RD_TOTAL = intersect(GD_TOTAL, RD_VIRUS_TOTAL)
int_GD_RE_TOTAL = intersect(GD_TOTAL, RE_VIRUS_TOTAL)
int_GE_RD_TOTAL = intersect(GE_TOTAL, RD_VIRUS_TOTAL)
int_GE_RE_TOTAL = intersect(GE_TOTAL, RE_VIRUS_TOTAL)
int_GL_RD_TOTAL = intersect(GL_TOTAL, RD_VIRUS_TOTAL)
int_GL_RE_TOTAL = intersect(GL_TOTAL, RE_VIRUS_TOTAL)
int_GD_GE_RD_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, RD_VIRUS_TOTAL))
int_GD_GE_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, RE_VIRUS_TOTAL))
int_GD_GL_RD_TOTAL = Reduce(intersect, list(GD_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL))
int_GD_GL_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GL_TOTAL, RE_VIRUS_TOTAL))
int_GD_RD_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GE_GL_RD_TOTAL = Reduce(intersect, list(GE_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL))
int_GE_GL_RE_TOTAL = Reduce(intersect, list(GE_TOTAL, GL_TOTAL, RE_VIRUS_TOTAL))
int_GE_RD_RE_TOTAL = Reduce(intersect, list(GE_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GL_RD_RE_TOTAL = Reduce(intersect, list(GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GD_GE_GL_RD_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL))
int_GD_GE_GL_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, GL_TOTAL, RE_VIRUS_TOTAL))
int_GD_GE_RD_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GD_GL_RD_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GE_GL_RD_RE_TOTAL = Reduce(intersect, list(GE_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GD_GE_GL_RD_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
LENGTH(int_GD_GE_TOTAL)
length(int_GD_GE_TOTAL)
length(int_GD_GL_TOTAL)
length(int_GD_RD_TOTAL)
length(int_GD_RE_TOTAL)
length(int_GE_GL_TOTAL)
length(int_GE_RD_TOTAL)
length(int_GE_RE_TOTAL)
length(int_GL_RD_TOTAL)
length(int_GL_RE_TOTAL)
length(int_RD_RE_VIRUS_TOTAL)
length(int_GD_GE_GL_TOTAL)
length(int_GD_GE_RD_TOTAL)
length(int_GD_GE_RE_TOTAL)
length(int_GD_GL_RD_TOTAL)
length(int_GD_GL_RE_TOTAL)
length(int_GD_RD_RE_TOTAL)
length(int_GE_GL_RD_TOTAL)
length(int_GE_GL_RE_TOTAL)
length(int_GE_RD_RE_TOTAL)
length(int_GL_RD_RE_TOTAL)
length(int_GD_GE_GL_RD_TOTAL)
length(int_GD_GE_GL_RE_TOTAL)
length(int_GD_GE_RD_RE_TOTAL)
length(int_GD_GL_RD_RE_TOTAL)
length(int_GE_GL_RD_RE_TOTAL)
length(int_GD_GE_GL_RD_RE_TOTAL)
# Reference five-set diagram
venn.plot <- draw.quintuple.venn(
area1 = length(GD_TOTAL),
area2 = length(GE_TOTAL),
area3 = length(GL_TOTAL),
area4 = length(RD_VIRUS_TOTAL),
area5 = length(RE_VIRUS_TOTAL),
n12 = length(int_GD_GE_TOTAL),
n13 = length(int_GD_GL_TOTAL),
n14 = length(int_GD_RD_TOTAL),
n15 = length(int_GD_RE_TOTAL),
n23 = length(int_GE_GL_TOTAL),
n24 = length(int_GE_RD_TOTAL),
n25 = length(int_GE_RE_TOTAL),
n34 = length(int_GL_RD_TOTAL),
n35 = length(int_GL_RE_TOTAL),
n45 = length(int_RD_RE_VIRUS_TOTAL),
n123 = length(int_GD_GE_GL_TOTAL),
n124 = length(int_GD_GE_RD_TOTAL),
n125 = length(int_GD_GE_RE_TOTAL),
n134 = length(int_GD_GL_RD_TOTAL),
n135 = length(int_GD_GL_RE_TOTAL),
n145 = length(int_GD_RD_RE_TOTAL),
n234 = length(int_GE_GL_RD_TOTAL),
n235 = length(int_GE_GL_RE_TOTAL),
n245 = length(int_GE_RD_RE_TOTAL),
n345 = length(int_GL_RD_RE_TOTAL),
n1234 = length(int_GD_GE_GL_RD_TOTAL),
n1235 = length(int_GD_GE_GL_RE_TOTAL),
n1245 = length(int_GD_GE_RD_RE_TOTAL),
n1345 = length(int_GD_GL_RD_RE_TOTAL),
n2345 = length(int_GE_GL_RD_RE_TOTAL),
n12345 = length(int_GD_GE_GL_RD_RE_TOTAL),
category = c("A", "B", "C", "D", "E"),
fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.cex = 2,
margin = 0.05,
cex = c(1.5, 1.5, 1.5, 1.5, 1.5, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8,
1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 1, 1, 1, 1, 1.5),
ind = TRUE
);
getwd()
tiff(filename = "Quintuple_Venn_diagram.tiff", compression = "lzw");
grid.draw(venn.plot);
dev.off();
# Reference five-set diagram
venn.plot <- draw.quintuple.venn(
area1 = length(GD_TOTAL),
area2 = length(GE_TOTAL),
area3 = length(GL_TOTAL),
area4 = length(RD_VIRUS_TOTAL),
area5 = length(RE_VIRUS_TOTAL),
n12 = length(int_GD_GE_TOTAL),
n13 = length(int_GD_GL_TOTAL),
n14 = length(int_GD_RD_TOTAL),
n15 = length(int_GD_RE_TOTAL),
n23 = length(int_GE_GL_TOTAL),
n24 = length(int_GE_RD_TOTAL),
n25 = length(int_GE_RE_TOTAL),
n34 = length(int_GL_RD_TOTAL),
n35 = length(int_GL_RE_TOTAL),
n45 = length(int_RD_RE_VIRUS_TOTAL),
n123 = length(int_GD_GE_GL_TOTAL),
n124 = length(int_GD_GE_RD_TOTAL),
n125 = length(int_GD_GE_RE_TOTAL),
n134 = length(int_GD_GL_RD_TOTAL),
n135 = length(int_GD_GL_RE_TOTAL),
n145 = length(int_GD_RD_RE_TOTAL),
n234 = length(int_GE_GL_RD_TOTAL),
n235 = length(int_GE_GL_RE_TOTAL),
n245 = length(int_GE_RD_RE_TOTAL),
n345 = length(int_GL_RD_RE_TOTAL),
n1234 = length(int_GD_GE_GL_RD_TOTAL),
n1235 = length(int_GD_GE_GL_RE_TOTAL),
n1245 = length(int_GD_GE_RD_RE_TOTAL),
n1345 = length(int_GD_GL_RD_RE_TOTAL),
n2345 = length(int_GE_GL_RD_RE_TOTAL),
n12345 = length(int_GD_GE_GL_RD_RE_TOTAL),
category = c("Galbraith DESeq2", "Galbraith EdgeR", "Galbraith Limma", "Rutter DESeq2", "Rutter EdgeR"),
fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.cex = 2,
margin = 0.05,
cex = c(1.5, 1.5, 1.5, 1.5, 1.5, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8,
1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 1, 1, 1, 1, 1.5),
ind = TRUE
);
tiff(filename = "Quintuple_Venn_diagram.tiff", compression = "lzw");
grid.draw(venn.plot);
dev.off();
# Reference five-set diagram
venn.plot <- draw.quintuple.venn(
area1 = length(GD_TOTAL),
area2 = length(GE_TOTAL),
area3 = length(GL_TOTAL),
area4 = length(RD_VIRUS_TOTAL),
area5 = length(RE_VIRUS_TOTAL),
n12 = length(int_GD_GE_TOTAL),
n13 = length(int_GD_GL_TOTAL),
n14 = length(int_GD_RD_TOTAL),
n15 = length(int_GD_RE_TOTAL),
n23 = length(int_GE_GL_TOTAL),
n24 = length(int_GE_RD_TOTAL),
n25 = length(int_GE_RE_TOTAL),
n34 = length(int_GL_RD_TOTAL),
n35 = length(int_GL_RE_TOTAL),
n45 = length(int_RD_RE_VIRUS_TOTAL),
n123 = length(int_GD_GE_GL_TOTAL),
n124 = length(int_GD_GE_RD_TOTAL),
n125 = length(int_GD_GE_RE_TOTAL),
n134 = length(int_GD_GL_RD_TOTAL),
n135 = length(int_GD_GL_RE_TOTAL),
n145 = length(int_GD_RD_RE_TOTAL),
n234 = length(int_GE_GL_RD_TOTAL),
n235 = length(int_GE_GL_RE_TOTAL),
n245 = length(int_GE_RD_RE_TOTAL),
n345 = length(int_GL_RD_RE_TOTAL),
n1234 = length(int_GD_GE_GL_RD_TOTAL),
n1235 = length(int_GD_GE_GL_RE_TOTAL),
n1245 = length(int_GD_GE_RD_RE_TOTAL),
n1345 = length(int_GD_GL_RD_RE_TOTAL),
n2345 = length(int_GE_GL_RD_RE_TOTAL),
n12345 = length(int_GD_GE_GL_RD_RE_TOTAL),
category = c("", "", " ", " ", " "),
fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.cex = 2,
margin = 0.05,
cex = c(1.5, 1.5, 1.5, 1.5, 1.5, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8,
1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 1, 1, 1, 1, 1.5),
ind = TRUE
);
tiff(filename = "Quintuple_Venn_diagram.tiff", compression = "lzw");
grid.draw(venn.plot);
dev.off();
dev.off()
dev.off()
??cor.test
??cor.test
??stats
install.packages("packageName")
library("packageName")
tiff(filename = "Quintuple_Venn_diagram.jpg", compression = "lzw");
grid.draw(venn.plot);
dev.off();
getwd()
rm(list=ls())
dev.off()
dev.off()
library(VennDiagram)
library(readr)
library(readxl)
#######################################################
# Read in DEG files
RDC <- readRDS("../C_R/DESeq2/RDC.Rds")
RDR <- readRDS("../C_R/DESeq2/RDR.Rds")
RD_DIET_TOTAL <- readRDS("../C_R/DESeq2/RD_DIET_TOTAL.Rds")
REC <- readRDS("../C_R/EdgeR/edgeR/REC.Rds")
RER <- readRDS("../C_R/EdgeR/edgeR/RER.Rds")
RE_DIET_TOTAL <- readRDS("../C_R/EdgeR/edgeR/RE_DIET_TOTAL.Rds")
RLC <- readRDS("../C_R/LimmaVoom/RLC.Rds")
RLR <- readRDS("../C_R/LimmaVoom/RLR.Rds")
RL_DIET_TOTAL <- readRDS("../C_R/LimmaVoom/RL_DIET_TOTAL.Rds")
RDV <- readRDS("../N_V/DESeq2/RDV.Rds")
RDN <- readRDS("../N_V/DESeq2/RDN.Rds")
RD_VIRUS_TOTAL <- readRDS("../N_V/DESeq2/RD_VIRUS_TOTAL.Rds")
REV <- readRDS("../N_V/EdgeR/edgeR/REV.Rds")
REN <- readRDS("../N_V/EdgeR/edgeR/REN.Rds")
RE_VIRUS_TOTAL <- readRDS("../N_V/EdgeR/edgeR/RE_VIRUS_TOTAL.Rds")
GDV <- readRDS("../VirusHoneyBee/DESeq2/GDV.Rds")
GDC <- readRDS("../VirusHoneyBee/DESeq2/GDC.Rds")
GD_TOTAL <- readRDS("../VirusHoneyBee/DESeq2/GD_TOTAL.Rds")
GEV <- readRDS("../VirusHoneyBee/EdgeR/edgeR/GEV.Rds")
GEC <- readRDS("../VirusHoneyBee/EdgeR/edgeR/GEC.Rds")
GE_TOTAL <- readRDS("../VirusHoneyBee/EdgeR/edgeR/GE_TOTAL.Rds")
GLV <- readRDS("../VirusHoneyBee/LimmaVoom/GLV.Rds")
GLC <- readRDS("../VirusHoneyBee/LimmaVoom/GLC.Rds")
GL_TOTAL <- readRDS("../VirusHoneyBee/LimmaVoom/GL_TOTAL.Rds")
dataR = read.delim(file="../N_V/data/AllLaneCount.txt",row.names=1,stringsAsFactors = FALSE)
dataG = read_delim("../VirusHoneyBee/data/GSE65659_AntiviralResponseReadCounts.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
dataG <- as.data.frame(dataG)
namesR = rownames(dataR)
namesG = unname(sapply(dataG$id, function(x) strsplit(strsplit(x, "[|]")[[1]][3], "[-]")[[1]][1]))
N = intersect(namesG, namesR)
N = length(N)
namesG
length(namesG)
length(namesR)
int_GD_GE_TOTAL = intersect(GD_TOTAL, GE_TOTAL)
int_GD_GL_TOTAL = intersect(GD_TOTAL, GL_TOTAL)
int_GE_GL_TOTAL = intersect(GE_TOTAL, GL_TOTAL)
int_GD_GE_GL_TOTAL = intersect(intersect(GD_TOTAL, GE_TOTAL), GL_TOTAL)
int_GDV_GEV = intersect(GDV, GEV)
int_GDV_GLV = intersect(GDV, GLV)
int_GEV_GLV = intersect(GEV, GLV)
int_GDV_GEV_GLV = intersect(intersect(GDV, GEV), GLV)
int_GDC_GEC = intersect(GDC, GEC)
int_GDC_GLC = intersect(GDC, GLC)
int_GEC_GLC = intersect(GEC, GLC)
int_GDC_GEC_GLC = intersect(intersect(GDC, GEC), GLC)
int_RD_RE_DIET_TOTAL = intersect(RD_DIET_TOTAL, RE_DIET_TOTAL)
int_RD_RL_DIET_TOTAL = intersect(RD_DIET_TOTAL, RL_DIET_TOTAL)
int_RE_RL_DIET_TOTAL = intersect(RE_DIET_TOTAL, RL_DIET_TOTAL)
int_RD_RE_RL_DIET_TOTAL = intersect(intersect(RD_DIET_TOTAL, RE_DIET_TOTAL), RL_DIET_TOTAL)
int_RDC_REC = intersect(RDC, REC)
int_RDC_RLC = intersect(RDC, RLC)
int_REC_RLC = intersect(REC, RLC)
int_RDC_REC_RLC = intersect(intersect(RDC, REC), RLC)
int_RDR_RER = intersect(RDR, RER)
int_RDR_RLR = intersect(RDR, RLR)
int_RER_RLR = intersect(RER, RLR)
int_RDR_RER_RLR = intersect(intersect(RDR, RER), RLR)
int_RD_RE_VIRUS_TOTAL = intersect(RD_VIRUS_TOTAL, RE_VIRUS_TOTAL)
int_RDV_REV = intersect(RDV, REV)
int_RDN_REN = intersect(RDN, REN)
# Keep 753 DEGs from Galbraith paper
gDSupp = read_excel("../VirusHoneyBee/GalbraithSuppFile.xlsx")
gDSupp = as.data.frame(gDSupp)
keepColNms <- gDSupp[3,]
keepColNms <- as.data.frame(keepColNms)
colnames(keepColNms) <- NULL
keepColNms <- unlist(keepColNms)
keepDEGs <- gDSupp[4:(4+753-1),]
keepDEGs <- as.data.frame(keepDEGs)
colnames(keepDEGs) <- keepColNms
# Extract 753 IDs from Galbraith paper
gDSupp = keepDEGs$id
View(keepDEGs)
which(keepDEGs$`up/down`=="+")
length(which(keepDEGs$`up/down`=="+"))
# Extract 753 Upregeulated IDs from Galbraith paper
gDSuppUp = keepDEGs[which(keepDEGs$`up/down`=="+"),]$id
gDSupp
gDSuppUp
gDSuppUp = unname(sapply(gDSuppUp, function(x) strsplit(strsplit(x, "[|]")[[1]][3], "[-]")[[1]][1]))
str(GDV)
gtDSuppUpp = intersect(gDSuppUp, GDV)
str(gtDSuppUpp)
fileName = paste(getwd(), "/Venn_Galbraith_GalbraithSupp_VirusUp.jpg", sep="")
jpeg(fileName)
draw.pairwise.venn(area1=length(GDV), area2=length(gDSuppUp), cross.area = length(gtDSuppUpp), category=c("Galbraith Us", "Galbraith Supp"))
invisible(dev.off())
# Extract 607 Upregeulated IDs from Galbraith paper
gDSuppUp = keepDEGs[which(keepDEGs$`up/down`=="-"),]$id
rm(gDSuppUp)
# Extract 607 Upregeulated IDs from Galbraith paper
gDSuppDown = keepDEGs[which(keepDEGs$`up/down`=="-"),]$id
gDSuppDown
gDSuppDown = unname(sapply(gDSuppDown, function(x) strsplit(strsplit(x, "[|]")[[1]][3], "[-]")[[1]][1]))
gtDSuppDown = intersect(gDSuppDown, GDC)
fileName = paste(getwd(), "/Venn_Galbraith_GalbraithSupp_VirusDown.jpg", sep="")
jpeg(fileName)
draw.pairwise.venn(area1=length(GDC), area2=length(gDSuppDown), cross.area = length(gtDSuppDown), category=c("Galbraith Us", "Galbraith Supp"))
invisible(dev.off())
# Extract 607 Upregeulated IDs from Galbraith paper
gDSuppUp = keepDEGs[which(keepDEGs$`up/down`=="+"),]$id
gDSuppUp = unname(sapply(gDSuppUp, function(x) strsplit(strsplit(x, "[|]")[[1]][3], "[-]")[[1]][1]))
gtDSuppUpp = intersect(gDSuppUp, GDV)
# No cases where upregulated in one pipeline (DESeq, EdgeR, Limma) and downregulated in another
length(intersect(gDSuppUp, GDC))
length(intersect(gDSuppDown, GDV))
dev.off()
dev.off()
getwd()
rm(list=ls())
#######################################################
# Read in DEG files
RDC <- readRDS("../C_R/DESeq2/RDC.Rds")
RDR <- readRDS("../C_R/DESeq2/RDR.Rds")
RD_DIET_TOTAL <- readRDS("../C_R/DESeq2/RD_DIET_TOTAL.Rds")
REC <- readRDS("../C_R/EdgeR/edgeR/REC.Rds")
RER <- readRDS("../C_R/EdgeR/edgeR/RER.Rds")
RE_DIET_TOTAL <- readRDS("../C_R/EdgeR/edgeR/RE_DIET_TOTAL.Rds")
RLC <- readRDS("../C_R/LimmaVoom/RLC.Rds")
RLR <- readRDS("../C_R/LimmaVoom/RLR.Rds")
RL_DIET_TOTAL <- readRDS("../C_R/LimmaVoom/RL_DIET_TOTAL.Rds")
RDV <- readRDS("../N_V/DESeq2/RDV.Rds")
RDN <- readRDS("../N_V/DESeq2/RDN.Rds")
RD_VIRUS_TOTAL <- readRDS("../N_V/DESeq2/RD_VIRUS_TOTAL.Rds")
REV <- readRDS("../N_V/EdgeR/edgeR/REV.Rds")
REN <- readRDS("../N_V/EdgeR/edgeR/REN.Rds")
RE_VIRUS_TOTAL <- readRDS("../N_V/EdgeR/edgeR/RE_VIRUS_TOTAL.Rds")
GDV <- readRDS("../VirusHoneyBee/DESeq2/GDV.Rds")
GDC <- readRDS("../VirusHoneyBee/DESeq2/GDC.Rds")
GD_TOTAL <- readRDS("../VirusHoneyBee/DESeq2/GD_TOTAL.Rds")
GEV <- readRDS("../VirusHoneyBee/EdgeR/edgeR/GEV.Rds")
GEC <- readRDS("../VirusHoneyBee/EdgeR/edgeR/GEC.Rds")
GE_TOTAL <- readRDS("../VirusHoneyBee/EdgeR/edgeR/GE_TOTAL.Rds")
GLV <- readRDS("../VirusHoneyBee/LimmaVoom/GLV.Rds")
GLC <- readRDS("../VirusHoneyBee/LimmaVoom/GLC.Rds")
GL_TOTAL <- readRDS("../VirusHoneyBee/LimmaVoom/GL_TOTAL.Rds")
dataR = read.delim(file="../N_V/data/AllLaneCount.txt",row.names=1,stringsAsFactors = FALSE)
dataG = read_delim("../VirusHoneyBee/data/GSE65659_AntiviralResponseReadCounts.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
dataG <- as.data.frame(dataG)
namesR = rownames(dataR)
namesG = unname(sapply(dataG$id, function(x) strsplit(strsplit(x, "[|]")[[1]][3], "[-]")[[1]][1]))
N = intersect(namesG, namesR)
N = length(N)
int_GD_GE_TOTAL = intersect(GD_TOTAL, GE_TOTAL)
int_GD_GL_TOTAL = intersect(GD_TOTAL, GL_TOTAL)
int_GE_GL_TOTAL = intersect(GE_TOTAL, GL_TOTAL)
int_GD_GE_GL_TOTAL = intersect(intersect(GD_TOTAL, GE_TOTAL), GL_TOTAL)
int_GDV_GEV = intersect(GDV, GEV)
int_GDV_GLV = intersect(GDV, GLV)
int_GEV_GLV = intersect(GEV, GLV)
int_GDV_GEV_GLV = intersect(intersect(GDV, GEV), GLV)
int_GDC_GEC = intersect(GDC, GEC)
int_GDC_GLC = intersect(GDC, GLC)
int_GEC_GLC = intersect(GEC, GLC)
int_GDC_GEC_GLC = intersect(intersect(GDC, GEC), GLC)
int_RD_RE_DIET_TOTAL = intersect(RD_DIET_TOTAL, RE_DIET_TOTAL)
int_RD_RL_DIET_TOTAL = intersect(RD_DIET_TOTAL, RL_DIET_TOTAL)
int_RE_RL_DIET_TOTAL = intersect(RE_DIET_TOTAL, RL_DIET_TOTAL)
int_RD_RE_RL_DIET_TOTAL = intersect(intersect(RD_DIET_TOTAL, RE_DIET_TOTAL), RL_DIET_TOTAL)
int_RDC_REC = intersect(RDC, REC)
int_RDC_RLC = intersect(RDC, RLC)
int_REC_RLC = intersect(REC, RLC)
int_RDC_REC_RLC = intersect(intersect(RDC, REC), RLC)
int_RDR_RER = intersect(RDR, RER)
int_RDR_RLR = intersect(RDR, RLR)
int_RER_RLR = intersect(RER, RLR)
int_RDR_RER_RLR = intersect(intersect(RDR, RER), RLR)
int_RD_RE_VIRUS_TOTAL = intersect(RD_VIRUS_TOTAL, RE_VIRUS_TOTAL)
int_RDV_REV = intersect(RDV, REV)
int_RDN_REN = intersect(RDN, REN)
fileName = paste(getwd(), "/Venn_Rutter_Virus_Healthy.jpg", sep="")
jpeg(fileName)
draw.pairwise.venn(area1=length(RDN), area2=length(REN), cross.area=length(int_RDN_REN), c("DESeq2", "EdgeR"))
invisible(dev.off())
dev.off()
int_GD_RD_TOTAL = intersect(GD_TOTAL, RD_VIRUS_TOTAL)
int_GD_RE_TOTAL = intersect(GD_TOTAL, RE_VIRUS_TOTAL)
int_GE_RD_TOTAL = intersect(GE_TOTAL, RD_VIRUS_TOTAL)
int_GE_RE_TOTAL = intersect(GE_TOTAL, RE_VIRUS_TOTAL)
int_GL_RD_TOTAL = intersect(GL_TOTAL, RD_VIRUS_TOTAL)
int_GL_RE_TOTAL = intersect(GL_TOTAL, RE_VIRUS_TOTAL)
int_GD_GE_RD_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, RD_VIRUS_TOTAL))
int_GD_GE_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, RE_VIRUS_TOTAL))
int_GD_GL_RD_TOTAL = Reduce(intersect, list(GD_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL))
int_GD_GL_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GL_TOTAL, RE_VIRUS_TOTAL))
int_GD_RD_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GE_GL_RD_TOTAL = Reduce(intersect, list(GE_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL))
int_GE_GL_RE_TOTAL = Reduce(intersect, list(GE_TOTAL, GL_TOTAL, RE_VIRUS_TOTAL))
int_GE_RD_RE_TOTAL = Reduce(intersect, list(GE_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GL_RD_RE_TOTAL = Reduce(intersect, list(GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GD_GE_GL_RD_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL))
int_GD_GE_GL_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, GL_TOTAL, RE_VIRUS_TOTAL))
int_GD_GE_RD_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GD_GL_RD_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GE_GL_RD_RE_TOTAL = Reduce(intersect, list(GE_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
int_GD_GE_GL_RD_RE_TOTAL = Reduce(intersect, list(GD_TOTAL, GE_TOTAL, GL_TOTAL, RD_VIRUS_TOTAL, RE_VIRUS_TOTAL))
# Reference five-set diagram
venn.plot <- draw.quintuple.venn(
area1 = length(GD_TOTAL),
area2 = length(GE_TOTAL),
area3 = length(GL_TOTAL),
area4 = length(RD_VIRUS_TOTAL),
area5 = length(RE_VIRUS_TOTAL),
n12 = length(int_GD_GE_TOTAL),
n13 = length(int_GD_GL_TOTAL),
n14 = length(int_GD_RD_TOTAL),
n15 = length(int_GD_RE_TOTAL),
n23 = length(int_GE_GL_TOTAL),
n24 = length(int_GE_RD_TOTAL),
n25 = length(int_GE_RE_TOTAL),
n34 = length(int_GL_RD_TOTAL),
n35 = length(int_GL_RE_TOTAL),
n45 = length(int_RD_RE_VIRUS_TOTAL),
n123 = length(int_GD_GE_GL_TOTAL),
n124 = length(int_GD_GE_RD_TOTAL),
n125 = length(int_GD_GE_RE_TOTAL),
n134 = length(int_GD_GL_RD_TOTAL),
n135 = length(int_GD_GL_RE_TOTAL),
n145 = length(int_GD_RD_RE_TOTAL),
n234 = length(int_GE_GL_RD_TOTAL),
n235 = length(int_GE_GL_RE_TOTAL),
n245 = length(int_GE_RD_RE_TOTAL),
n345 = length(int_GL_RD_RE_TOTAL),
n1234 = length(int_GD_GE_GL_RD_TOTAL),
n1235 = length(int_GD_GE_GL_RE_TOTAL),
n1245 = length(int_GD_GE_RD_RE_TOTAL),
n1345 = length(int_GD_GL_RD_RE_TOTAL),
n2345 = length(int_GE_GL_RD_RE_TOTAL),
n12345 = length(int_GD_GE_GL_RD_RE_TOTAL),
category = c("", "", " ", " ", " "),
fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.cex = 2,
margin = 0.05,
cex = c(1.5, 1.5, 1.5, 1.5, 1.5, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8,
1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 1, 1, 1, 1, 1.5),
ind = TRUE
);
tiff(filename = "Quintuple_Venn_diagram.jpg", compression = "lzw");
grid.draw(venn.plot);
dev.off();
dev.off();
dev.off();
